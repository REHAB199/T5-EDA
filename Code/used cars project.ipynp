{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "b539b821",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "import seaborn as sns\n",
    "import matplotlib.pyplot as plt\n",
    "import math\n",
    "\n",
    "from sklearn import preprocessing"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "45460e62",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>url</th>\n",
       "      <th>region</th>\n",
       "      <th>region_url</th>\n",
       "      <th>price</th>\n",
       "      <th>year</th>\n",
       "      <th>manufacturer</th>\n",
       "      <th>model</th>\n",
       "      <th>condition</th>\n",
       "      <th>cylinders</th>\n",
       "      <th>...</th>\n",
       "      <th>size</th>\n",
       "      <th>type</th>\n",
       "      <th>paint_color</th>\n",
       "      <th>image_url</th>\n",
       "      <th>description</th>\n",
       "      <th>county</th>\n",
       "      <th>state</th>\n",
       "      <th>lat</th>\n",
       "      <th>long</th>\n",
       "      <th>posting_date</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>7222695916</td>\n",
       "      <td>https://prescott.craigslist.org/cto/d/prescott...</td>\n",
       "      <td>prescott</td>\n",
       "      <td>https://prescott.craigslist.org</td>\n",
       "      <td>6000</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>az</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>7218891961</td>\n",
       "      <td>https://fayar.craigslist.org/ctd/d/bentonville...</td>\n",
       "      <td>fayetteville</td>\n",
       "      <td>https://fayar.craigslist.org</td>\n",
       "      <td>11900</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>ar</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>7221797935</td>\n",
       "      <td>https://keys.craigslist.org/cto/d/summerland-k...</td>\n",
       "      <td>florida keys</td>\n",
       "      <td>https://keys.craigslist.org</td>\n",
       "      <td>21000</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>fl</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>7222270760</td>\n",
       "      <td>https://worcester.craigslist.org/cto/d/west-br...</td>\n",
       "      <td>worcester / central MA</td>\n",
       "      <td>https://worcester.craigslist.org</td>\n",
       "      <td>1500</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>ma</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>7210384030</td>\n",
       "      <td>https://greensboro.craigslist.org/cto/d/trinit...</td>\n",
       "      <td>greensboro</td>\n",
       "      <td>https://greensboro.craigslist.org</td>\n",
       "      <td>4900</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>nc</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>426875</th>\n",
       "      <td>7301591192</td>\n",
       "      <td>https://wyoming.craigslist.org/ctd/d/atlanta-2...</td>\n",
       "      <td>wyoming</td>\n",
       "      <td>https://wyoming.craigslist.org</td>\n",
       "      <td>23590</td>\n",
       "      <td>2019.0</td>\n",
       "      <td>nissan</td>\n",
       "      <td>maxima s sedan 4d</td>\n",
       "      <td>good</td>\n",
       "      <td>6 cylinders</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>sedan</td>\n",
       "      <td>NaN</td>\n",
       "      <td>https://images.craigslist.org/00o0o_iiraFnHg8q...</td>\n",
       "      <td>Carvana is the safer way to buy a car During t...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>wy</td>\n",
       "      <td>33.786500</td>\n",
       "      <td>-84.445400</td>\n",
       "      <td>2021-04-04T03:21:31-0600</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>426876</th>\n",
       "      <td>7301591187</td>\n",
       "      <td>https://wyoming.craigslist.org/ctd/d/atlanta-2...</td>\n",
       "      <td>wyoming</td>\n",
       "      <td>https://wyoming.craigslist.org</td>\n",
       "      <td>30590</td>\n",
       "      <td>2020.0</td>\n",
       "      <td>volvo</td>\n",
       "      <td>s60 t5 momentum sedan 4d</td>\n",
       "      <td>good</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>sedan</td>\n",
       "      <td>red</td>\n",
       "      <td>https://images.craigslist.org/00x0x_15sbgnxCIS...</td>\n",
       "      <td>Carvana is the safer way to buy a car During t...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>wy</td>\n",
       "      <td>33.786500</td>\n",
       "      <td>-84.445400</td>\n",
       "      <td>2021-04-04T03:21:29-0600</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>426877</th>\n",
       "      <td>7301591147</td>\n",
       "      <td>https://wyoming.craigslist.org/ctd/d/atlanta-2...</td>\n",
       "      <td>wyoming</td>\n",
       "      <td>https://wyoming.craigslist.org</td>\n",
       "      <td>34990</td>\n",
       "      <td>2020.0</td>\n",
       "      <td>cadillac</td>\n",
       "      <td>xt4 sport suv 4d</td>\n",
       "      <td>good</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>hatchback</td>\n",
       "      <td>white</td>\n",
       "      <td>https://images.craigslist.org/00L0L_farM7bxnxR...</td>\n",
       "      <td>Carvana is the safer way to buy a car During t...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>wy</td>\n",
       "      <td>33.779214</td>\n",
       "      <td>-84.411811</td>\n",
       "      <td>2021-04-04T03:21:17-0600</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>426878</th>\n",
       "      <td>7301591140</td>\n",
       "      <td>https://wyoming.craigslist.org/ctd/d/atlanta-2...</td>\n",
       "      <td>wyoming</td>\n",
       "      <td>https://wyoming.craigslist.org</td>\n",
       "      <td>28990</td>\n",
       "      <td>2018.0</td>\n",
       "      <td>lexus</td>\n",
       "      <td>es 350 sedan 4d</td>\n",
       "      <td>good</td>\n",
       "      <td>6 cylinders</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>sedan</td>\n",
       "      <td>silver</td>\n",
       "      <td>https://images.craigslist.org/00z0z_bKnIVGLkDT...</td>\n",
       "      <td>Carvana is the safer way to buy a car During t...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>wy</td>\n",
       "      <td>33.786500</td>\n",
       "      <td>-84.445400</td>\n",
       "      <td>2021-04-04T03:21:11-0600</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>426879</th>\n",
       "      <td>7301591129</td>\n",
       "      <td>https://wyoming.craigslist.org/ctd/d/atlanta-2...</td>\n",
       "      <td>wyoming</td>\n",
       "      <td>https://wyoming.craigslist.org</td>\n",
       "      <td>30590</td>\n",
       "      <td>2019.0</td>\n",
       "      <td>bmw</td>\n",
       "      <td>4 series 430i gran coupe</td>\n",
       "      <td>good</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>coupe</td>\n",
       "      <td>NaN</td>\n",
       "      <td>https://images.craigslist.org/00Y0Y_lEUocjyRxa...</td>\n",
       "      <td>Carvana is the safer way to buy a car During t...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>wy</td>\n",
       "      <td>33.779214</td>\n",
       "      <td>-84.411811</td>\n",
       "      <td>2021-04-04T03:21:07-0600</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>426880 rows × 26 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                id                                                url  \\\n",
       "0       7222695916  https://prescott.craigslist.org/cto/d/prescott...   \n",
       "1       7218891961  https://fayar.craigslist.org/ctd/d/bentonville...   \n",
       "2       7221797935  https://keys.craigslist.org/cto/d/summerland-k...   \n",
       "3       7222270760  https://worcester.craigslist.org/cto/d/west-br...   \n",
       "4       7210384030  https://greensboro.craigslist.org/cto/d/trinit...   \n",
       "...            ...                                                ...   \n",
       "426875  7301591192  https://wyoming.craigslist.org/ctd/d/atlanta-2...   \n",
       "426876  7301591187  https://wyoming.craigslist.org/ctd/d/atlanta-2...   \n",
       "426877  7301591147  https://wyoming.craigslist.org/ctd/d/atlanta-2...   \n",
       "426878  7301591140  https://wyoming.craigslist.org/ctd/d/atlanta-2...   \n",
       "426879  7301591129  https://wyoming.craigslist.org/ctd/d/atlanta-2...   \n",
       "\n",
       "                        region                         region_url  price  \\\n",
       "0                     prescott    https://prescott.craigslist.org   6000   \n",
       "1                 fayetteville       https://fayar.craigslist.org  11900   \n",
       "2                 florida keys        https://keys.craigslist.org  21000   \n",
       "3       worcester / central MA   https://worcester.craigslist.org   1500   \n",
       "4                   greensboro  https://greensboro.craigslist.org   4900   \n",
       "...                        ...                                ...    ...   \n",
       "426875                 wyoming     https://wyoming.craigslist.org  23590   \n",
       "426876                 wyoming     https://wyoming.craigslist.org  30590   \n",
       "426877                 wyoming     https://wyoming.craigslist.org  34990   \n",
       "426878                 wyoming     https://wyoming.craigslist.org  28990   \n",
       "426879                 wyoming     https://wyoming.craigslist.org  30590   \n",
       "\n",
       "          year manufacturer                     model condition    cylinders  \\\n",
       "0          NaN          NaN                       NaN       NaN          NaN   \n",
       "1          NaN          NaN                       NaN       NaN          NaN   \n",
       "2          NaN          NaN                       NaN       NaN          NaN   \n",
       "3          NaN          NaN                       NaN       NaN          NaN   \n",
       "4          NaN          NaN                       NaN       NaN          NaN   \n",
       "...        ...          ...                       ...       ...          ...   \n",
       "426875  2019.0       nissan         maxima s sedan 4d      good  6 cylinders   \n",
       "426876  2020.0        volvo  s60 t5 momentum sedan 4d      good          NaN   \n",
       "426877  2020.0     cadillac          xt4 sport suv 4d      good          NaN   \n",
       "426878  2018.0        lexus           es 350 sedan 4d      good  6 cylinders   \n",
       "426879  2019.0          bmw  4 series 430i gran coupe      good          NaN   \n",
       "\n",
       "        ... size       type paint_color  \\\n",
       "0       ...  NaN        NaN         NaN   \n",
       "1       ...  NaN        NaN         NaN   \n",
       "2       ...  NaN        NaN         NaN   \n",
       "3       ...  NaN        NaN         NaN   \n",
       "4       ...  NaN        NaN         NaN   \n",
       "...     ...  ...        ...         ...   \n",
       "426875  ...  NaN      sedan         NaN   \n",
       "426876  ...  NaN      sedan         red   \n",
       "426877  ...  NaN  hatchback       white   \n",
       "426878  ...  NaN      sedan      silver   \n",
       "426879  ...  NaN      coupe         NaN   \n",
       "\n",
       "                                                image_url  \\\n",
       "0                                                     NaN   \n",
       "1                                                     NaN   \n",
       "2                                                     NaN   \n",
       "3                                                     NaN   \n",
       "4                                                     NaN   \n",
       "...                                                   ...   \n",
       "426875  https://images.craigslist.org/00o0o_iiraFnHg8q...   \n",
       "426876  https://images.craigslist.org/00x0x_15sbgnxCIS...   \n",
       "426877  https://images.craigslist.org/00L0L_farM7bxnxR...   \n",
       "426878  https://images.craigslist.org/00z0z_bKnIVGLkDT...   \n",
       "426879  https://images.craigslist.org/00Y0Y_lEUocjyRxa...   \n",
       "\n",
       "                                              description county state  \\\n",
       "0                                                     NaN    NaN    az   \n",
       "1                                                     NaN    NaN    ar   \n",
       "2                                                     NaN    NaN    fl   \n",
       "3                                                     NaN    NaN    ma   \n",
       "4                                                     NaN    NaN    nc   \n",
       "...                                                   ...    ...   ...   \n",
       "426875  Carvana is the safer way to buy a car During t...    NaN    wy   \n",
       "426876  Carvana is the safer way to buy a car During t...    NaN    wy   \n",
       "426877  Carvana is the safer way to buy a car During t...    NaN    wy   \n",
       "426878  Carvana is the safer way to buy a car During t...    NaN    wy   \n",
       "426879  Carvana is the safer way to buy a car During t...    NaN    wy   \n",
       "\n",
       "              lat       long              posting_date  \n",
       "0             NaN        NaN                       NaN  \n",
       "1             NaN        NaN                       NaN  \n",
       "2             NaN        NaN                       NaN  \n",
       "3             NaN        NaN                       NaN  \n",
       "4             NaN        NaN                       NaN  \n",
       "...           ...        ...                       ...  \n",
       "426875  33.786500 -84.445400  2021-04-04T03:21:31-0600  \n",
       "426876  33.786500 -84.445400  2021-04-04T03:21:29-0600  \n",
       "426877  33.779214 -84.411811  2021-04-04T03:21:17-0600  \n",
       "426878  33.786500 -84.445400  2021-04-04T03:21:11-0600  \n",
       "426879  33.779214 -84.411811  2021-04-04T03:21:07-0600  \n",
       "\n",
       "[426880 rows x 26 columns]"
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Reading data\n",
    "df = pd.read_csv('vehicles.csv')\n",
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "3200d116",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 426880 entries, 0 to 426879\n",
      "Data columns (total 26 columns):\n",
      " #   Column        Non-Null Count   Dtype  \n",
      "---  ------        --------------   -----  \n",
      " 0   id            426880 non-null  int64  \n",
      " 1   url           426880 non-null  object \n",
      " 2   region        426880 non-null  object \n",
      " 3   region_url    426880 non-null  object \n",
      " 4   price         426880 non-null  int64  \n",
      " 5   year          425675 non-null  float64\n",
      " 6   manufacturer  409234 non-null  object \n",
      " 7   model         421603 non-null  object \n",
      " 8   condition     252776 non-null  object \n",
      " 9   cylinders     249202 non-null  object \n",
      " 10  fuel          423867 non-null  object \n",
      " 11  odometer      422480 non-null  float64\n",
      " 12  title_status  418638 non-null  object \n",
      " 13  transmission  424324 non-null  object \n",
      " 14  VIN           265838 non-null  object \n",
      " 15  drive         296313 non-null  object \n",
      " 16  size          120519 non-null  object \n",
      " 17  type          334022 non-null  object \n",
      " 18  paint_color   296677 non-null  object \n",
      " 19  image_url     426812 non-null  object \n",
      " 20  description   426810 non-null  object \n",
      " 21  county        0 non-null       float64\n",
      " 22  state         426880 non-null  object \n",
      " 23  lat           420331 non-null  float64\n",
      " 24  long          420331 non-null  float64\n",
      " 25  posting_date  426812 non-null  object \n",
      "dtypes: float64(5), int64(2), object(19)\n",
      "memory usage: 84.7+ MB\n"
     ]
    }
   ],
   "source": [
    "# information about data\n",
    "df.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "dd3daa7d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>url</th>\n",
       "      <th>region</th>\n",
       "      <th>region_url</th>\n",
       "      <th>price</th>\n",
       "      <th>year</th>\n",
       "      <th>manufacturer</th>\n",
       "      <th>model</th>\n",
       "      <th>condition</th>\n",
       "      <th>cylinders</th>\n",
       "      <th>...</th>\n",
       "      <th>size</th>\n",
       "      <th>type</th>\n",
       "      <th>paint_color</th>\n",
       "      <th>image_url</th>\n",
       "      <th>description</th>\n",
       "      <th>county</th>\n",
       "      <th>state</th>\n",
       "      <th>lat</th>\n",
       "      <th>long</th>\n",
       "      <th>posting_date</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>7222695916</td>\n",
       "      <td>https://prescott.craigslist.org/cto/d/prescott...</td>\n",
       "      <td>prescott</td>\n",
       "      <td>https://prescott.craigslist.org</td>\n",
       "      <td>6000</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>az</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>7218891961</td>\n",
       "      <td>https://fayar.craigslist.org/ctd/d/bentonville...</td>\n",
       "      <td>fayetteville</td>\n",
       "      <td>https://fayar.craigslist.org</td>\n",
       "      <td>11900</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>ar</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>7221797935</td>\n",
       "      <td>https://keys.craigslist.org/cto/d/summerland-k...</td>\n",
       "      <td>florida keys</td>\n",
       "      <td>https://keys.craigslist.org</td>\n",
       "      <td>21000</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>fl</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>7222270760</td>\n",
       "      <td>https://worcester.craigslist.org/cto/d/west-br...</td>\n",
       "      <td>worcester / central MA</td>\n",
       "      <td>https://worcester.craigslist.org</td>\n",
       "      <td>1500</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>ma</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>7210384030</td>\n",
       "      <td>https://greensboro.craigslist.org/cto/d/trinit...</td>\n",
       "      <td>greensboro</td>\n",
       "      <td>https://greensboro.craigslist.org</td>\n",
       "      <td>4900</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>nc</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>7222379453</td>\n",
       "      <td>https://hudsonvalley.craigslist.org/cto/d/west...</td>\n",
       "      <td>hudson valley</td>\n",
       "      <td>https://hudsonvalley.craigslist.org</td>\n",
       "      <td>1600</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>ny</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>7221952215</td>\n",
       "      <td>https://hudsonvalley.craigslist.org/cto/d/west...</td>\n",
       "      <td>hudson valley</td>\n",
       "      <td>https://hudsonvalley.craigslist.org</td>\n",
       "      <td>1000</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>ny</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>7220195662</td>\n",
       "      <td>https://hudsonvalley.craigslist.org/cto/d/poug...</td>\n",
       "      <td>hudson valley</td>\n",
       "      <td>https://hudsonvalley.craigslist.org</td>\n",
       "      <td>15995</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>ny</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>7209064557</td>\n",
       "      <td>https://medford.craigslist.org/cto/d/grants-pa...</td>\n",
       "      <td>medford-ashland</td>\n",
       "      <td>https://medford.craigslist.org</td>\n",
       "      <td>5000</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>or</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>7219485069</td>\n",
       "      <td>https://erie.craigslist.org/cto/d/erie-2012-su...</td>\n",
       "      <td>erie</td>\n",
       "      <td>https://erie.craigslist.org</td>\n",
       "      <td>3000</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>pa</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>10 rows × 26 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "           id                                                url  \\\n",
       "0  7222695916  https://prescott.craigslist.org/cto/d/prescott...   \n",
       "1  7218891961  https://fayar.craigslist.org/ctd/d/bentonville...   \n",
       "2  7221797935  https://keys.craigslist.org/cto/d/summerland-k...   \n",
       "3  7222270760  https://worcester.craigslist.org/cto/d/west-br...   \n",
       "4  7210384030  https://greensboro.craigslist.org/cto/d/trinit...   \n",
       "5  7222379453  https://hudsonvalley.craigslist.org/cto/d/west...   \n",
       "6  7221952215  https://hudsonvalley.craigslist.org/cto/d/west...   \n",
       "7  7220195662  https://hudsonvalley.craigslist.org/cto/d/poug...   \n",
       "8  7209064557  https://medford.craigslist.org/cto/d/grants-pa...   \n",
       "9  7219485069  https://erie.craigslist.org/cto/d/erie-2012-su...   \n",
       "\n",
       "                   region                           region_url  price  year  \\\n",
       "0                prescott      https://prescott.craigslist.org   6000   NaN   \n",
       "1            fayetteville         https://fayar.craigslist.org  11900   NaN   \n",
       "2            florida keys          https://keys.craigslist.org  21000   NaN   \n",
       "3  worcester / central MA     https://worcester.craigslist.org   1500   NaN   \n",
       "4              greensboro    https://greensboro.craigslist.org   4900   NaN   \n",
       "5           hudson valley  https://hudsonvalley.craigslist.org   1600   NaN   \n",
       "6           hudson valley  https://hudsonvalley.craigslist.org   1000   NaN   \n",
       "7           hudson valley  https://hudsonvalley.craigslist.org  15995   NaN   \n",
       "8         medford-ashland       https://medford.craigslist.org   5000   NaN   \n",
       "9                    erie          https://erie.craigslist.org   3000   NaN   \n",
       "\n",
       "  manufacturer model condition cylinders  ... size  type paint_color  \\\n",
       "0          NaN   NaN       NaN       NaN  ...  NaN   NaN         NaN   \n",
       "1          NaN   NaN       NaN       NaN  ...  NaN   NaN         NaN   \n",
       "2          NaN   NaN       NaN       NaN  ...  NaN   NaN         NaN   \n",
       "3          NaN   NaN       NaN       NaN  ...  NaN   NaN         NaN   \n",
       "4          NaN   NaN       NaN       NaN  ...  NaN   NaN         NaN   \n",
       "5          NaN   NaN       NaN       NaN  ...  NaN   NaN         NaN   \n",
       "6          NaN   NaN       NaN       NaN  ...  NaN   NaN         NaN   \n",
       "7          NaN   NaN       NaN       NaN  ...  NaN   NaN         NaN   \n",
       "8          NaN   NaN       NaN       NaN  ...  NaN   NaN         NaN   \n",
       "9          NaN   NaN       NaN       NaN  ...  NaN   NaN         NaN   \n",
       "\n",
       "  image_url description county state lat long posting_date  \n",
       "0       NaN         NaN    NaN    az NaN  NaN          NaN  \n",
       "1       NaN         NaN    NaN    ar NaN  NaN          NaN  \n",
       "2       NaN         NaN    NaN    fl NaN  NaN          NaN  \n",
       "3       NaN         NaN    NaN    ma NaN  NaN          NaN  \n",
       "4       NaN         NaN    NaN    nc NaN  NaN          NaN  \n",
       "5       NaN         NaN    NaN    ny NaN  NaN          NaN  \n",
       "6       NaN         NaN    NaN    ny NaN  NaN          NaN  \n",
       "7       NaN         NaN    NaN    ny NaN  NaN          NaN  \n",
       "8       NaN         NaN    NaN    or NaN  NaN          NaN  \n",
       "9       NaN         NaN    NaN    pa NaN  NaN          NaN  \n",
       "\n",
       "[10 rows x 26 columns]"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# show first 10 rowes\n",
    "df.head(10)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "a0446b39",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>url</th>\n",
       "      <th>region</th>\n",
       "      <th>region_url</th>\n",
       "      <th>price</th>\n",
       "      <th>year</th>\n",
       "      <th>manufacturer</th>\n",
       "      <th>model</th>\n",
       "      <th>condition</th>\n",
       "      <th>cylinders</th>\n",
       "      <th>...</th>\n",
       "      <th>size</th>\n",
       "      <th>type</th>\n",
       "      <th>paint_color</th>\n",
       "      <th>image_url</th>\n",
       "      <th>description</th>\n",
       "      <th>county</th>\n",
       "      <th>state</th>\n",
       "      <th>lat</th>\n",
       "      <th>long</th>\n",
       "      <th>posting_date</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>356480</th>\n",
       "      <td>7303807394</td>\n",
       "      <td>https://knoxville.craigslist.org/cto/d/knoxvil...</td>\n",
       "      <td>knoxville</td>\n",
       "      <td>https://knoxville.craigslist.org</td>\n",
       "      <td>18500</td>\n",
       "      <td>2006.0</td>\n",
       "      <td>ford</td>\n",
       "      <td>f-550</td>\n",
       "      <td>excellent</td>\n",
       "      <td>8 cylinders</td>\n",
       "      <td>...</td>\n",
       "      <td>full-size</td>\n",
       "      <td>truck</td>\n",
       "      <td>white</td>\n",
       "      <td>https://images.craigslist.org/00808_b5QP3VdgQd...</td>\n",
       "      <td>2006 F550 with 15 ft flatbed. EGR deleted, all...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>tn</td>\n",
       "      <td>36.022141</td>\n",
       "      <td>-83.913574</td>\n",
       "      <td>2021-04-08T15:27:45-0400</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>235126</th>\n",
       "      <td>7308711180</td>\n",
       "      <td>https://eastnc.craigslist.org/ctd/d/greenville...</td>\n",
       "      <td>eastern NC</td>\n",
       "      <td>https://eastnc.craigslist.org</td>\n",
       "      <td>21590</td>\n",
       "      <td>2011.0</td>\n",
       "      <td>mazda</td>\n",
       "      <td>mx-5 miata grand touring</td>\n",
       "      <td>good</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>convertible</td>\n",
       "      <td>red</td>\n",
       "      <td>https://images.craigslist.org/00l0l_36dem8XXp4...</td>\n",
       "      <td>Carvana is the safer way to buy a car During t...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>nc</td>\n",
       "      <td>35.590000</td>\n",
       "      <td>-77.370000</td>\n",
       "      <td>2021-04-18T10:11:04-0400</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>44644</th>\n",
       "      <td>7312460201</td>\n",
       "      <td>https://palmsprings.craigslist.org/ctd/d/palm-...</td>\n",
       "      <td>palm springs</td>\n",
       "      <td>https://palmsprings.craigslist.org</td>\n",
       "      <td>45900</td>\n",
       "      <td>2018.0</td>\n",
       "      <td>mercedes-benz</td>\n",
       "      <td>c 300</td>\n",
       "      <td>excellent</td>\n",
       "      <td>4 cylinders</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>convertible</td>\n",
       "      <td>NaN</td>\n",
       "      <td>https://images.craigslist.org/00H0H_deWPuHHKuD...</td>\n",
       "      <td>2018 Mercedes-Benz C 300 Convertible is priced...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>ca</td>\n",
       "      <td>33.743904</td>\n",
       "      <td>-116.359028</td>\n",
       "      <td>2021-04-25T12:10:29-0700</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>78825</th>\n",
       "      <td>7315055179</td>\n",
       "      <td>https://fortcollins.craigslist.org/ctd/d/longm...</td>\n",
       "      <td>fort collins / north CO</td>\n",
       "      <td>https://fortcollins.craigslist.org</td>\n",
       "      <td>15999</td>\n",
       "      <td>2011.0</td>\n",
       "      <td>lexus</td>\n",
       "      <td>ls 460 base</td>\n",
       "      <td>NaN</td>\n",
       "      <td>8 cylinders</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>sedan</td>\n",
       "      <td>NaN</td>\n",
       "      <td>https://images.craigslist.org/00A0A_lWLwJxkRXk...</td>\n",
       "      <td>Victory Motors of Colorado        STOCK #:  L1...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>co</td>\n",
       "      <td>40.182151</td>\n",
       "      <td>-105.102373</td>\n",
       "      <td>2021-04-30T16:06:37-0600</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>4 rows × 26 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                id                                                url  \\\n",
       "356480  7303807394  https://knoxville.craigslist.org/cto/d/knoxvil...   \n",
       "235126  7308711180  https://eastnc.craigslist.org/ctd/d/greenville...   \n",
       "44644   7312460201  https://palmsprings.craigslist.org/ctd/d/palm-...   \n",
       "78825   7315055179  https://fortcollins.craigslist.org/ctd/d/longm...   \n",
       "\n",
       "                         region                          region_url  price  \\\n",
       "356480                knoxville    https://knoxville.craigslist.org  18500   \n",
       "235126               eastern NC       https://eastnc.craigslist.org  21590   \n",
       "44644              palm springs  https://palmsprings.craigslist.org  45900   \n",
       "78825   fort collins / north CO  https://fortcollins.craigslist.org  15999   \n",
       "\n",
       "          year   manufacturer                     model  condition  \\\n",
       "356480  2006.0           ford                     f-550  excellent   \n",
       "235126  2011.0          mazda  mx-5 miata grand touring       good   \n",
       "44644   2018.0  mercedes-benz                     c 300  excellent   \n",
       "78825   2011.0          lexus               ls 460 base        NaN   \n",
       "\n",
       "          cylinders  ...       size         type paint_color  \\\n",
       "356480  8 cylinders  ...  full-size        truck       white   \n",
       "235126          NaN  ...        NaN  convertible         red   \n",
       "44644   4 cylinders  ...        NaN  convertible         NaN   \n",
       "78825   8 cylinders  ...        NaN        sedan         NaN   \n",
       "\n",
       "                                                image_url  \\\n",
       "356480  https://images.craigslist.org/00808_b5QP3VdgQd...   \n",
       "235126  https://images.craigslist.org/00l0l_36dem8XXp4...   \n",
       "44644   https://images.craigslist.org/00H0H_deWPuHHKuD...   \n",
       "78825   https://images.craigslist.org/00A0A_lWLwJxkRXk...   \n",
       "\n",
       "                                              description county state  \\\n",
       "356480  2006 F550 with 15 ft flatbed. EGR deleted, all...    NaN    tn   \n",
       "235126  Carvana is the safer way to buy a car During t...    NaN    nc   \n",
       "44644   2018 Mercedes-Benz C 300 Convertible is priced...    NaN    ca   \n",
       "78825   Victory Motors of Colorado        STOCK #:  L1...    NaN    co   \n",
       "\n",
       "              lat        long              posting_date  \n",
       "356480  36.022141  -83.913574  2021-04-08T15:27:45-0400  \n",
       "235126  35.590000  -77.370000  2021-04-18T10:11:04-0400  \n",
       "44644   33.743904 -116.359028  2021-04-25T12:10:29-0700  \n",
       "78825   40.182151 -105.102373  2021-04-30T16:06:37-0600  \n",
       "\n",
       "[4 rows x 26 columns]"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# random sample from data\n",
    "df.sample(4)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "2f48e5ad",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>price</th>\n",
       "      <th>year</th>\n",
       "      <th>odometer</th>\n",
       "      <th>county</th>\n",
       "      <th>lat</th>\n",
       "      <th>long</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>4.268800e+05</td>\n",
       "      <td>4.268800e+05</td>\n",
       "      <td>425675.000000</td>\n",
       "      <td>4.224800e+05</td>\n",
       "      <td>0.0</td>\n",
       "      <td>420331.000000</td>\n",
       "      <td>420331.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>7.311487e+09</td>\n",
       "      <td>7.519903e+04</td>\n",
       "      <td>2011.235191</td>\n",
       "      <td>9.804333e+04</td>\n",
       "      <td>NaN</td>\n",
       "      <td>38.493940</td>\n",
       "      <td>-94.748599</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>4.473170e+06</td>\n",
       "      <td>1.218228e+07</td>\n",
       "      <td>9.452120</td>\n",
       "      <td>2.138815e+05</td>\n",
       "      <td>NaN</td>\n",
       "      <td>5.841533</td>\n",
       "      <td>18.365462</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>7.207408e+09</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>1900.000000</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>NaN</td>\n",
       "      <td>-84.122245</td>\n",
       "      <td>-159.827728</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>7.308143e+09</td>\n",
       "      <td>5.900000e+03</td>\n",
       "      <td>2008.000000</td>\n",
       "      <td>3.770400e+04</td>\n",
       "      <td>NaN</td>\n",
       "      <td>34.601900</td>\n",
       "      <td>-111.939847</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>7.312621e+09</td>\n",
       "      <td>1.395000e+04</td>\n",
       "      <td>2013.000000</td>\n",
       "      <td>8.554800e+04</td>\n",
       "      <td>NaN</td>\n",
       "      <td>39.150100</td>\n",
       "      <td>-88.432600</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>7.315254e+09</td>\n",
       "      <td>2.648575e+04</td>\n",
       "      <td>2017.000000</td>\n",
       "      <td>1.335425e+05</td>\n",
       "      <td>NaN</td>\n",
       "      <td>42.398900</td>\n",
       "      <td>-80.832039</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>7.317101e+09</td>\n",
       "      <td>3.736929e+09</td>\n",
       "      <td>2022.000000</td>\n",
       "      <td>1.000000e+07</td>\n",
       "      <td>NaN</td>\n",
       "      <td>82.390818</td>\n",
       "      <td>173.885502</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                 id         price           year      odometer  county  \\\n",
       "count  4.268800e+05  4.268800e+05  425675.000000  4.224800e+05     0.0   \n",
       "mean   7.311487e+09  7.519903e+04    2011.235191  9.804333e+04     NaN   \n",
       "std    4.473170e+06  1.218228e+07       9.452120  2.138815e+05     NaN   \n",
       "min    7.207408e+09  0.000000e+00    1900.000000  0.000000e+00     NaN   \n",
       "25%    7.308143e+09  5.900000e+03    2008.000000  3.770400e+04     NaN   \n",
       "50%    7.312621e+09  1.395000e+04    2013.000000  8.554800e+04     NaN   \n",
       "75%    7.315254e+09  2.648575e+04    2017.000000  1.335425e+05     NaN   \n",
       "max    7.317101e+09  3.736929e+09    2022.000000  1.000000e+07     NaN   \n",
       "\n",
       "                 lat           long  \n",
       "count  420331.000000  420331.000000  \n",
       "mean       38.493940     -94.748599  \n",
       "std         5.841533      18.365462  \n",
       "min       -84.122245    -159.827728  \n",
       "25%        34.601900    -111.939847  \n",
       "50%        39.150100     -88.432600  \n",
       "75%        42.398900     -80.832039  \n",
       "max        82.390818     173.885502  "
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# statistic information \n",
    "df.describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "466344de",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The max and min respectively\n",
      "3736928711\n",
      "0\n"
     ]
    }
   ],
   "source": [
    "print(\"The max and min respectively\")\n",
    "print(df['price'].max())\n",
    "print(df['price'].min())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "89a3ef51",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>url</th>\n",
       "      <th>region</th>\n",
       "      <th>region_url</th>\n",
       "      <th>price</th>\n",
       "      <th>year</th>\n",
       "      <th>manufacturer</th>\n",
       "      <th>model</th>\n",
       "      <th>condition</th>\n",
       "      <th>cylinders</th>\n",
       "      <th>...</th>\n",
       "      <th>size</th>\n",
       "      <th>type</th>\n",
       "      <th>paint_color</th>\n",
       "      <th>image_url</th>\n",
       "      <th>description</th>\n",
       "      <th>county</th>\n",
       "      <th>state</th>\n",
       "      <th>lat</th>\n",
       "      <th>long</th>\n",
       "      <th>posting_date</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>426875</th>\n",
       "      <td>7301591192</td>\n",
       "      <td>https://wyoming.craigslist.org/ctd/d/atlanta-2...</td>\n",
       "      <td>wyoming</td>\n",
       "      <td>https://wyoming.craigslist.org</td>\n",
       "      <td>23590</td>\n",
       "      <td>2019.0</td>\n",
       "      <td>nissan</td>\n",
       "      <td>maxima s sedan 4d</td>\n",
       "      <td>good</td>\n",
       "      <td>6 cylinders</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>sedan</td>\n",
       "      <td>NaN</td>\n",
       "      <td>https://images.craigslist.org/00o0o_iiraFnHg8q...</td>\n",
       "      <td>Carvana is the safer way to buy a car During t...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>wy</td>\n",
       "      <td>33.786500</td>\n",
       "      <td>-84.445400</td>\n",
       "      <td>2021-04-04T03:21:31-0600</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>426876</th>\n",
       "      <td>7301591187</td>\n",
       "      <td>https://wyoming.craigslist.org/ctd/d/atlanta-2...</td>\n",
       "      <td>wyoming</td>\n",
       "      <td>https://wyoming.craigslist.org</td>\n",
       "      <td>30590</td>\n",
       "      <td>2020.0</td>\n",
       "      <td>volvo</td>\n",
       "      <td>s60 t5 momentum sedan 4d</td>\n",
       "      <td>good</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>sedan</td>\n",
       "      <td>red</td>\n",
       "      <td>https://images.craigslist.org/00x0x_15sbgnxCIS...</td>\n",
       "      <td>Carvana is the safer way to buy a car During t...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>wy</td>\n",
       "      <td>33.786500</td>\n",
       "      <td>-84.445400</td>\n",
       "      <td>2021-04-04T03:21:29-0600</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>426877</th>\n",
       "      <td>7301591147</td>\n",
       "      <td>https://wyoming.craigslist.org/ctd/d/atlanta-2...</td>\n",
       "      <td>wyoming</td>\n",
       "      <td>https://wyoming.craigslist.org</td>\n",
       "      <td>34990</td>\n",
       "      <td>2020.0</td>\n",
       "      <td>cadillac</td>\n",
       "      <td>xt4 sport suv 4d</td>\n",
       "      <td>good</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>hatchback</td>\n",
       "      <td>white</td>\n",
       "      <td>https://images.craigslist.org/00L0L_farM7bxnxR...</td>\n",
       "      <td>Carvana is the safer way to buy a car During t...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>wy</td>\n",
       "      <td>33.779214</td>\n",
       "      <td>-84.411811</td>\n",
       "      <td>2021-04-04T03:21:17-0600</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>426878</th>\n",
       "      <td>7301591140</td>\n",
       "      <td>https://wyoming.craigslist.org/ctd/d/atlanta-2...</td>\n",
       "      <td>wyoming</td>\n",
       "      <td>https://wyoming.craigslist.org</td>\n",
       "      <td>28990</td>\n",
       "      <td>2018.0</td>\n",
       "      <td>lexus</td>\n",
       "      <td>es 350 sedan 4d</td>\n",
       "      <td>good</td>\n",
       "      <td>6 cylinders</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>sedan</td>\n",
       "      <td>silver</td>\n",
       "      <td>https://images.craigslist.org/00z0z_bKnIVGLkDT...</td>\n",
       "      <td>Carvana is the safer way to buy a car During t...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>wy</td>\n",
       "      <td>33.786500</td>\n",
       "      <td>-84.445400</td>\n",
       "      <td>2021-04-04T03:21:11-0600</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>426879</th>\n",
       "      <td>7301591129</td>\n",
       "      <td>https://wyoming.craigslist.org/ctd/d/atlanta-2...</td>\n",
       "      <td>wyoming</td>\n",
       "      <td>https://wyoming.craigslist.org</td>\n",
       "      <td>30590</td>\n",
       "      <td>2019.0</td>\n",
       "      <td>bmw</td>\n",
       "      <td>4 series 430i gran coupe</td>\n",
       "      <td>good</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>coupe</td>\n",
       "      <td>NaN</td>\n",
       "      <td>https://images.craigslist.org/00Y0Y_lEUocjyRxa...</td>\n",
       "      <td>Carvana is the safer way to buy a car During t...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>wy</td>\n",
       "      <td>33.779214</td>\n",
       "      <td>-84.411811</td>\n",
       "      <td>2021-04-04T03:21:07-0600</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 26 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                id                                                url  \\\n",
       "426875  7301591192  https://wyoming.craigslist.org/ctd/d/atlanta-2...   \n",
       "426876  7301591187  https://wyoming.craigslist.org/ctd/d/atlanta-2...   \n",
       "426877  7301591147  https://wyoming.craigslist.org/ctd/d/atlanta-2...   \n",
       "426878  7301591140  https://wyoming.craigslist.org/ctd/d/atlanta-2...   \n",
       "426879  7301591129  https://wyoming.craigslist.org/ctd/d/atlanta-2...   \n",
       "\n",
       "         region                      region_url  price    year manufacturer  \\\n",
       "426875  wyoming  https://wyoming.craigslist.org  23590  2019.0       nissan   \n",
       "426876  wyoming  https://wyoming.craigslist.org  30590  2020.0        volvo   \n",
       "426877  wyoming  https://wyoming.craigslist.org  34990  2020.0     cadillac   \n",
       "426878  wyoming  https://wyoming.craigslist.org  28990  2018.0        lexus   \n",
       "426879  wyoming  https://wyoming.craigslist.org  30590  2019.0          bmw   \n",
       "\n",
       "                           model condition    cylinders  ... size       type  \\\n",
       "426875         maxima s sedan 4d      good  6 cylinders  ...  NaN      sedan   \n",
       "426876  s60 t5 momentum sedan 4d      good          NaN  ...  NaN      sedan   \n",
       "426877          xt4 sport suv 4d      good          NaN  ...  NaN  hatchback   \n",
       "426878           es 350 sedan 4d      good  6 cylinders  ...  NaN      sedan   \n",
       "426879  4 series 430i gran coupe      good          NaN  ...  NaN      coupe   \n",
       "\n",
       "       paint_color                                          image_url  \\\n",
       "426875         NaN  https://images.craigslist.org/00o0o_iiraFnHg8q...   \n",
       "426876         red  https://images.craigslist.org/00x0x_15sbgnxCIS...   \n",
       "426877       white  https://images.craigslist.org/00L0L_farM7bxnxR...   \n",
       "426878      silver  https://images.craigslist.org/00z0z_bKnIVGLkDT...   \n",
       "426879         NaN  https://images.craigslist.org/00Y0Y_lEUocjyRxa...   \n",
       "\n",
       "                                              description county state  \\\n",
       "426875  Carvana is the safer way to buy a car During t...    NaN    wy   \n",
       "426876  Carvana is the safer way to buy a car During t...    NaN    wy   \n",
       "426877  Carvana is the safer way to buy a car During t...    NaN    wy   \n",
       "426878  Carvana is the safer way to buy a car During t...    NaN    wy   \n",
       "426879  Carvana is the safer way to buy a car During t...    NaN    wy   \n",
       "\n",
       "              lat       long              posting_date  \n",
       "426875  33.786500 -84.445400  2021-04-04T03:21:31-0600  \n",
       "426876  33.786500 -84.445400  2021-04-04T03:21:29-0600  \n",
       "426877  33.779214 -84.411811  2021-04-04T03:21:17-0600  \n",
       "426878  33.786500 -84.445400  2021-04-04T03:21:11-0600  \n",
       "426879  33.779214 -84.411811  2021-04-04T03:21:07-0600  \n",
       "\n",
       "[5 rows x 26 columns]"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# show last 5 rows\n",
    "df.tail()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "01c0c053",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Index(['id', 'url', 'region', 'region_url', 'price', 'year', 'manufacturer',\n",
      "       'model', 'condition', 'cylinders', 'fuel', 'odometer', 'title_status',\n",
      "       'transmission', 'VIN', 'drive', 'size', 'type', 'paint_color',\n",
      "       'image_url', 'description', 'county', 'state', 'lat', 'long',\n",
      "       'posting_date'],\n",
      "      dtype='object')\n"
     ]
    }
   ],
   "source": [
    "# show \n",
    "print(df.columns)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "6d8fbf07",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "id                int64\n",
       "url              object\n",
       "region           object\n",
       "region_url       object\n",
       "price             int64\n",
       "year            float64\n",
       "manufacturer     object\n",
       "model            object\n",
       "condition        object\n",
       "cylinders        object\n",
       "fuel             object\n",
       "odometer        float64\n",
       "title_status     object\n",
       "transmission     object\n",
       "VIN              object\n",
       "drive            object\n",
       "size             object\n",
       "type             object\n",
       "paint_color      object\n",
       "image_url        object\n",
       "description      object\n",
       "county          float64\n",
       "state            object\n",
       "lat             float64\n",
       "long            float64\n",
       "posting_date     object\n",
       "dtype: object"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.dtypes"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "b9b367eb",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "id                   0\n",
       "url                  0\n",
       "region               0\n",
       "region_url           0\n",
       "price                0\n",
       "year              1205\n",
       "manufacturer     17646\n",
       "model             5277\n",
       "condition       174104\n",
       "cylinders       177678\n",
       "fuel              3013\n",
       "odometer          4400\n",
       "title_status      8242\n",
       "transmission      2556\n",
       "VIN             161042\n",
       "drive           130567\n",
       "size            306361\n",
       "type             92858\n",
       "paint_color     130203\n",
       "image_url           68\n",
       "description         70\n",
       "county          426880\n",
       "state                0\n",
       "lat               6549\n",
       "long              6549\n",
       "posting_date        68\n",
       "dtype: int64"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.isna().sum()  # Nulls"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "01bc2948",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(426880, 26)"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "3fb058d7",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 426880 entries, 0 to 426879\n",
      "Data columns (total 26 columns):\n",
      " #   Column        Non-Null Count   Dtype  \n",
      "---  ------        --------------   -----  \n",
      " 0   id            426880 non-null  int64  \n",
      " 1   url           426880 non-null  object \n",
      " 2   region        426880 non-null  object \n",
      " 3   region_url    426880 non-null  object \n",
      " 4   price         426880 non-null  int64  \n",
      " 5   year          426880 non-null  object \n",
      " 6   manufacturer  409234 non-null  object \n",
      " 7   model         421603 non-null  object \n",
      " 8   condition     252776 non-null  object \n",
      " 9   cylinders     249202 non-null  object \n",
      " 10  fuel          423867 non-null  object \n",
      " 11  odometer      422480 non-null  float64\n",
      " 12  title_status  418638 non-null  object \n",
      " 13  transmission  424324 non-null  object \n",
      " 14  VIN           265838 non-null  object \n",
      " 15  drive         296313 non-null  object \n",
      " 16  size          120519 non-null  object \n",
      " 17  type          334022 non-null  object \n",
      " 18  paint_color   296677 non-null  object \n",
      " 19  image_url     426812 non-null  object \n",
      " 20  description   426810 non-null  object \n",
      " 21  county        0 non-null       float64\n",
      " 22  state         426880 non-null  object \n",
      " 23  lat           420331 non-null  float64\n",
      " 24  long          420331 non-null  float64\n",
      " 25  posting_date  426812 non-null  object \n",
      "dtypes: float64(4), int64(2), object(20)\n",
      "memory usage: 84.7+ MB\n"
     ]
    }
   ],
   "source": [
    "df['year'] = df.year.astype(str)\n",
    "df.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "4b795113",
   "metadata": {},
   "outputs": [],
   "source": [
    "# clean data "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "71343606",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>region</th>\n",
       "      <th>region_url</th>\n",
       "      <th>price</th>\n",
       "      <th>year</th>\n",
       "      <th>manufacturer</th>\n",
       "      <th>model</th>\n",
       "      <th>condition</th>\n",
       "      <th>cylinders</th>\n",
       "      <th>fuel</th>\n",
       "      <th>odometer</th>\n",
       "      <th>title_status</th>\n",
       "      <th>transmission</th>\n",
       "      <th>drive</th>\n",
       "      <th>type</th>\n",
       "      <th>paint_color</th>\n",
       "      <th>description</th>\n",
       "      <th>state</th>\n",
       "      <th>lat</th>\n",
       "      <th>long</th>\n",
       "      <th>posting_date</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>prescott</td>\n",
       "      <td>https://prescott.craigslist.org</td>\n",
       "      <td>6000</td>\n",
       "      <td>nan</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>az</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>fayetteville</td>\n",
       "      <td>https://fayar.craigslist.org</td>\n",
       "      <td>11900</td>\n",
       "      <td>nan</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>ar</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>florida keys</td>\n",
       "      <td>https://keys.craigslist.org</td>\n",
       "      <td>21000</td>\n",
       "      <td>nan</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>fl</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>worcester / central MA</td>\n",
       "      <td>https://worcester.craigslist.org</td>\n",
       "      <td>1500</td>\n",
       "      <td>nan</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>ma</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>greensboro</td>\n",
       "      <td>https://greensboro.craigslist.org</td>\n",
       "      <td>4900</td>\n",
       "      <td>nan</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>nc</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                   region                         region_url  price year  \\\n",
       "0                prescott    https://prescott.craigslist.org   6000  nan   \n",
       "1            fayetteville       https://fayar.craigslist.org  11900  nan   \n",
       "2            florida keys        https://keys.craigslist.org  21000  nan   \n",
       "3  worcester / central MA   https://worcester.craigslist.org   1500  nan   \n",
       "4              greensboro  https://greensboro.craigslist.org   4900  nan   \n",
       "\n",
       "  manufacturer model condition cylinders fuel  odometer title_status  \\\n",
       "0          NaN   NaN       NaN       NaN  NaN       NaN          NaN   \n",
       "1          NaN   NaN       NaN       NaN  NaN       NaN          NaN   \n",
       "2          NaN   NaN       NaN       NaN  NaN       NaN          NaN   \n",
       "3          NaN   NaN       NaN       NaN  NaN       NaN          NaN   \n",
       "4          NaN   NaN       NaN       NaN  NaN       NaN          NaN   \n",
       "\n",
       "  transmission drive type paint_color description state  lat  long  \\\n",
       "0          NaN   NaN  NaN         NaN         NaN    az  NaN   NaN   \n",
       "1          NaN   NaN  NaN         NaN         NaN    ar  NaN   NaN   \n",
       "2          NaN   NaN  NaN         NaN         NaN    fl  NaN   NaN   \n",
       "3          NaN   NaN  NaN         NaN         NaN    ma  NaN   NaN   \n",
       "4          NaN   NaN  NaN         NaN         NaN    nc  NaN   NaN   \n",
       "\n",
       "  posting_date  \n",
       "0          NaN  \n",
       "1          NaN  \n",
       "2          NaN  \n",
       "3          NaN  \n",
       "4          NaN  "
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "drop_cols =['url','image_url', 'size', 'VIN','county','id']\n",
    "df.drop(columns=drop_cols , axis=1, inplace=True)\n",
    "\n",
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "eb4fccab",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>price</th>\n",
       "      <th>odometer</th>\n",
       "      <th>lat</th>\n",
       "      <th>long</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>6000</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>11900</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>21000</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1500</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>4900</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   price  odometer  lat  long\n",
       "0   6000       NaN  NaN   NaN\n",
       "1  11900       NaN  NaN   NaN\n",
       "2  21000       NaN  NaN   NaN\n",
       "3   1500       NaN  NaN   NaN\n",
       "4   4900       NaN  NaN   NaN"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "category = ['manufacturer','cylinders','fuel','title_status','transmission','drive','type','paint_color','condition','year','posting_date'\n",
    "           ,'state','description','model','region','region_url']\n",
    "numerical = df.drop(category, axis=1)\n",
    "categorical = df[category]\n",
    "numerical.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "7146f078",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>manufacturer</th>\n",
       "      <th>cylinders</th>\n",
       "      <th>fuel</th>\n",
       "      <th>title_status</th>\n",
       "      <th>transmission</th>\n",
       "      <th>drive</th>\n",
       "      <th>type</th>\n",
       "      <th>paint_color</th>\n",
       "      <th>condition</th>\n",
       "      <th>year</th>\n",
       "      <th>posting_date</th>\n",
       "      <th>state</th>\n",
       "      <th>description</th>\n",
       "      <th>model</th>\n",
       "      <th>region</th>\n",
       "      <th>region_url</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>nan</td>\n",
       "      <td>NaN</td>\n",
       "      <td>az</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>prescott</td>\n",
       "      <td>https://prescott.craigslist.org</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>nan</td>\n",
       "      <td>NaN</td>\n",
       "      <td>ar</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>fayetteville</td>\n",
       "      <td>https://fayar.craigslist.org</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>nan</td>\n",
       "      <td>NaN</td>\n",
       "      <td>fl</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>florida keys</td>\n",
       "      <td>https://keys.craigslist.org</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>nan</td>\n",
       "      <td>NaN</td>\n",
       "      <td>ma</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>worcester / central MA</td>\n",
       "      <td>https://worcester.craigslist.org</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>nan</td>\n",
       "      <td>NaN</td>\n",
       "      <td>nc</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>greensboro</td>\n",
       "      <td>https://greensboro.craigslist.org</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  manufacturer cylinders fuel title_status transmission drive type  \\\n",
       "0          NaN       NaN  NaN          NaN          NaN   NaN  NaN   \n",
       "1          NaN       NaN  NaN          NaN          NaN   NaN  NaN   \n",
       "2          NaN       NaN  NaN          NaN          NaN   NaN  NaN   \n",
       "3          NaN       NaN  NaN          NaN          NaN   NaN  NaN   \n",
       "4          NaN       NaN  NaN          NaN          NaN   NaN  NaN   \n",
       "\n",
       "  paint_color condition year posting_date state description model  \\\n",
       "0         NaN       NaN  nan          NaN    az         NaN   NaN   \n",
       "1         NaN       NaN  nan          NaN    ar         NaN   NaN   \n",
       "2         NaN       NaN  nan          NaN    fl         NaN   NaN   \n",
       "3         NaN       NaN  nan          NaN    ma         NaN   NaN   \n",
       "4         NaN       NaN  nan          NaN    nc         NaN   NaN   \n",
       "\n",
       "                   region                         region_url  \n",
       "0                prescott    https://prescott.craigslist.org  \n",
       "1            fayetteville       https://fayar.craigslist.org  \n",
       "2            florida keys        https://keys.craigslist.org  \n",
       "3  worcester / central MA   https://worcester.craigslist.org  \n",
       "4              greensboro  https://greensboro.craigslist.org  "
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "categorical.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "97cfc4d0",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 426880 entries, 0 to 426879\n",
      "Data columns (total 16 columns):\n",
      " #   Column        Non-Null Count   Dtype \n",
      "---  ------        --------------   ----- \n",
      " 0   manufacturer  409234 non-null  object\n",
      " 1   cylinders     249202 non-null  object\n",
      " 2   fuel          423867 non-null  object\n",
      " 3   title_status  418638 non-null  object\n",
      " 4   transmission  424324 non-null  object\n",
      " 5   drive         296313 non-null  object\n",
      " 6   type          334022 non-null  object\n",
      " 7   paint_color   296677 non-null  object\n",
      " 8   condition     252776 non-null  object\n",
      " 9   year          426880 non-null  object\n",
      " 10  posting_date  426812 non-null  object\n",
      " 11  state         426880 non-null  object\n",
      " 12  description   426810 non-null  object\n",
      " 13  model         421603 non-null  object\n",
      " 14  region        426880 non-null  object\n",
      " 15  region_url    426880 non-null  object\n",
      "dtypes: object(16)\n",
      "memory usage: 52.1+ MB\n"
     ]
    }
   ],
   "source": [
    "categorical.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "91791a64",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 426880 entries, 0 to 426879\n",
      "Data columns (total 4 columns):\n",
      " #   Column    Non-Null Count   Dtype  \n",
      "---  ------    --------------   -----  \n",
      " 0   price     426880 non-null  int64  \n",
      " 1   odometer  422480 non-null  float64\n",
      " 2   lat       420331 non-null  float64\n",
      " 3   long      420331 non-null  float64\n",
      "dtypes: float64(3), int64(1)\n",
      "memory usage: 13.0 MB\n"
     ]
    }
   ],
   "source": [
    "numerical.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "7d023b37",
   "metadata": {},
   "outputs": [],
   "source": [
    "#fill value in numerical with mean\n",
    "for num in numerical:\n",
    "    mean = numerical[num].mean()\n",
    "    numerical[num]=numerical[num].fillna(mean) "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "9d23dbc2",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "manufacturer\n",
      "cylinders\n",
      "fuel\n",
      "title_status\n",
      "transmission\n",
      "drive\n",
      "type\n",
      "paint_color\n",
      "condition\n",
      "year\n",
      "posting_date\n",
      "state\n",
      "description\n",
      "model\n",
      "region\n",
      "region_url\n"
     ]
    }
   ],
   "source": [
    "for i in  categorical:\n",
    "    print(i)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "0716d215",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "price       0\n",
       "odometer    0\n",
       "lat         0\n",
       "long        0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 22,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#detect numerical missing value\n",
    "numerical.isnull().sum().sort_values(ascending=False) "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "4c1e03c6",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['manufacturer', 'cylinders', 'fuel', 'title_status', 'transmission',\n",
       "       'drive', 'type', 'paint_color', 'condition', 'year', 'posting_date',\n",
       "       'state', 'description', 'model', 'region', 'region_url'],\n",
       "      dtype='object')"
      ]
     },
     "execution_count": 23,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "categorical.columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "8839d758",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "<ipython-input-24-2b6ea16a770b>:3: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame.\n",
      "Try using .loc[row_indexer,col_indexer] = value instead\n",
      "\n",
      "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
      "  categorical[cat]=df[cat].fillna(mode)\n"
     ]
    }
   ],
   "source": [
    "for cat in categorical:\n",
    "    mode = categorical[cat].mode().values[0]\n",
    "    categorical[cat]=df[cat].fillna(mode)\n",
    "    \n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "06b52604",
   "metadata": {},
   "outputs": [],
   "source": [
    "import warnings\n",
    "warnings.filterwarnings('ignore')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "51e76822",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "manufacturer    0\n",
       "cylinders       0\n",
       "fuel            0\n",
       "title_status    0\n",
       "transmission    0\n",
       "drive           0\n",
       "type            0\n",
       "paint_color     0\n",
       "condition       0\n",
       "year            0\n",
       "posting_date    0\n",
       "state           0\n",
       "description     0\n",
       "model           0\n",
       "region          0\n",
       "region_url      0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 26,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#detect categorical missing value\n",
    "categorical.isnull().sum().sort_values(ascending=False) "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "d77b0528",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>manufacturer</th>\n",
       "      <th>cylinders</th>\n",
       "      <th>fuel</th>\n",
       "      <th>title_status</th>\n",
       "      <th>transmission</th>\n",
       "      <th>drive</th>\n",
       "      <th>type</th>\n",
       "      <th>paint_color</th>\n",
       "      <th>condition</th>\n",
       "      <th>year</th>\n",
       "      <th>posting_date</th>\n",
       "      <th>state</th>\n",
       "      <th>description</th>\n",
       "      <th>model</th>\n",
       "      <th>region</th>\n",
       "      <th>region_url</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>ford</td>\n",
       "      <td>6 cylinders</td>\n",
       "      <td>gas</td>\n",
       "      <td>clean</td>\n",
       "      <td>automatic</td>\n",
       "      <td>4wd</td>\n",
       "      <td>sedan</td>\n",
       "      <td>white</td>\n",
       "      <td>good</td>\n",
       "      <td>nan</td>\n",
       "      <td>2021-04-23T22:13:05-0400</td>\n",
       "      <td>az</td>\n",
       "      <td>35 VEHICLES PRICED UNDER $3000!!!  BIG TIME! T...</td>\n",
       "      <td>f-150</td>\n",
       "      <td>prescott</td>\n",
       "      <td>https://prescott.craigslist.org</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>ford</td>\n",
       "      <td>6 cylinders</td>\n",
       "      <td>gas</td>\n",
       "      <td>clean</td>\n",
       "      <td>automatic</td>\n",
       "      <td>4wd</td>\n",
       "      <td>sedan</td>\n",
       "      <td>white</td>\n",
       "      <td>good</td>\n",
       "      <td>nan</td>\n",
       "      <td>2021-04-23T22:13:05-0400</td>\n",
       "      <td>ar</td>\n",
       "      <td>35 VEHICLES PRICED UNDER $3000!!!  BIG TIME! T...</td>\n",
       "      <td>f-150</td>\n",
       "      <td>fayetteville</td>\n",
       "      <td>https://fayar.craigslist.org</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>ford</td>\n",
       "      <td>6 cylinders</td>\n",
       "      <td>gas</td>\n",
       "      <td>clean</td>\n",
       "      <td>automatic</td>\n",
       "      <td>4wd</td>\n",
       "      <td>sedan</td>\n",
       "      <td>white</td>\n",
       "      <td>good</td>\n",
       "      <td>nan</td>\n",
       "      <td>2021-04-23T22:13:05-0400</td>\n",
       "      <td>fl</td>\n",
       "      <td>35 VEHICLES PRICED UNDER $3000!!!  BIG TIME! T...</td>\n",
       "      <td>f-150</td>\n",
       "      <td>florida keys</td>\n",
       "      <td>https://keys.craigslist.org</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>ford</td>\n",
       "      <td>6 cylinders</td>\n",
       "      <td>gas</td>\n",
       "      <td>clean</td>\n",
       "      <td>automatic</td>\n",
       "      <td>4wd</td>\n",
       "      <td>sedan</td>\n",
       "      <td>white</td>\n",
       "      <td>good</td>\n",
       "      <td>nan</td>\n",
       "      <td>2021-04-23T22:13:05-0400</td>\n",
       "      <td>ma</td>\n",
       "      <td>35 VEHICLES PRICED UNDER $3000!!!  BIG TIME! T...</td>\n",
       "      <td>f-150</td>\n",
       "      <td>worcester / central MA</td>\n",
       "      <td>https://worcester.craigslist.org</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>ford</td>\n",
       "      <td>6 cylinders</td>\n",
       "      <td>gas</td>\n",
       "      <td>clean</td>\n",
       "      <td>automatic</td>\n",
       "      <td>4wd</td>\n",
       "      <td>sedan</td>\n",
       "      <td>white</td>\n",
       "      <td>good</td>\n",
       "      <td>nan</td>\n",
       "      <td>2021-04-23T22:13:05-0400</td>\n",
       "      <td>nc</td>\n",
       "      <td>35 VEHICLES PRICED UNDER $3000!!!  BIG TIME! T...</td>\n",
       "      <td>f-150</td>\n",
       "      <td>greensboro</td>\n",
       "      <td>https://greensboro.craigslist.org</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  manufacturer    cylinders fuel title_status transmission drive   type  \\\n",
       "0         ford  6 cylinders  gas        clean    automatic   4wd  sedan   \n",
       "1         ford  6 cylinders  gas        clean    automatic   4wd  sedan   \n",
       "2         ford  6 cylinders  gas        clean    automatic   4wd  sedan   \n",
       "3         ford  6 cylinders  gas        clean    automatic   4wd  sedan   \n",
       "4         ford  6 cylinders  gas        clean    automatic   4wd  sedan   \n",
       "\n",
       "  paint_color condition year              posting_date state  \\\n",
       "0       white      good  nan  2021-04-23T22:13:05-0400    az   \n",
       "1       white      good  nan  2021-04-23T22:13:05-0400    ar   \n",
       "2       white      good  nan  2021-04-23T22:13:05-0400    fl   \n",
       "3       white      good  nan  2021-04-23T22:13:05-0400    ma   \n",
       "4       white      good  nan  2021-04-23T22:13:05-0400    nc   \n",
       "\n",
       "                                         description  model  \\\n",
       "0  35 VEHICLES PRICED UNDER $3000!!!  BIG TIME! T...  f-150   \n",
       "1  35 VEHICLES PRICED UNDER $3000!!!  BIG TIME! T...  f-150   \n",
       "2  35 VEHICLES PRICED UNDER $3000!!!  BIG TIME! T...  f-150   \n",
       "3  35 VEHICLES PRICED UNDER $3000!!!  BIG TIME! T...  f-150   \n",
       "4  35 VEHICLES PRICED UNDER $3000!!!  BIG TIME! T...  f-150   \n",
       "\n",
       "                   region                         region_url  \n",
       "0                prescott    https://prescott.craigslist.org  \n",
       "1            fayetteville       https://fayar.craigslist.org  \n",
       "2            florida keys        https://keys.craigslist.org  \n",
       "3  worcester / central MA   https://worcester.craigslist.org  \n",
       "4              greensboro  https://greensboro.craigslist.org  "
      ]
     },
     "execution_count": 27,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "categorical.head()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "1627b8e0",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>price</th>\n",
       "      <th>odometer</th>\n",
       "      <th>lat</th>\n",
       "      <th>long</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>6000</td>\n",
       "      <td>98043.331443</td>\n",
       "      <td>38.49394</td>\n",
       "      <td>-94.748599</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>11900</td>\n",
       "      <td>98043.331443</td>\n",
       "      <td>38.49394</td>\n",
       "      <td>-94.748599</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>21000</td>\n",
       "      <td>98043.331443</td>\n",
       "      <td>38.49394</td>\n",
       "      <td>-94.748599</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1500</td>\n",
       "      <td>98043.331443</td>\n",
       "      <td>38.49394</td>\n",
       "      <td>-94.748599</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>4900</td>\n",
       "      <td>98043.331443</td>\n",
       "      <td>38.49394</td>\n",
       "      <td>-94.748599</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   price      odometer       lat       long\n",
       "0   6000  98043.331443  38.49394 -94.748599\n",
       "1  11900  98043.331443  38.49394 -94.748599\n",
       "2  21000  98043.331443  38.49394 -94.748599\n",
       "3   1500  98043.331443  38.49394 -94.748599\n",
       "4   4900  98043.331443  38.49394 -94.748599"
      ]
     },
     "execution_count": 28,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "numerical.head()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "fba4dadf",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>manufacturer</th>\n",
       "      <th>cylinders</th>\n",
       "      <th>fuel</th>\n",
       "      <th>title_status</th>\n",
       "      <th>transmission</th>\n",
       "      <th>drive</th>\n",
       "      <th>type</th>\n",
       "      <th>paint_color</th>\n",
       "      <th>condition</th>\n",
       "      <th>year</th>\n",
       "      <th>posting_date</th>\n",
       "      <th>state</th>\n",
       "      <th>description</th>\n",
       "      <th>model</th>\n",
       "      <th>region</th>\n",
       "      <th>region_url</th>\n",
       "      <th>price</th>\n",
       "      <th>odometer</th>\n",
       "      <th>lat</th>\n",
       "      <th>long</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>ford</td>\n",
       "      <td>6 cylinders</td>\n",
       "      <td>gas</td>\n",
       "      <td>clean</td>\n",
       "      <td>automatic</td>\n",
       "      <td>4wd</td>\n",
       "      <td>sedan</td>\n",
       "      <td>white</td>\n",
       "      <td>good</td>\n",
       "      <td>nan</td>\n",
       "      <td>2021-04-23T22:13:05-0400</td>\n",
       "      <td>az</td>\n",
       "      <td>35 VEHICLES PRICED UNDER $3000!!!  BIG TIME! T...</td>\n",
       "      <td>f-150</td>\n",
       "      <td>prescott</td>\n",
       "      <td>https://prescott.craigslist.org</td>\n",
       "      <td>6000</td>\n",
       "      <td>98043.331443</td>\n",
       "      <td>38.49394</td>\n",
       "      <td>-94.748599</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>ford</td>\n",
       "      <td>6 cylinders</td>\n",
       "      <td>gas</td>\n",
       "      <td>clean</td>\n",
       "      <td>automatic</td>\n",
       "      <td>4wd</td>\n",
       "      <td>sedan</td>\n",
       "      <td>white</td>\n",
       "      <td>good</td>\n",
       "      <td>nan</td>\n",
       "      <td>2021-04-23T22:13:05-0400</td>\n",
       "      <td>ar</td>\n",
       "      <td>35 VEHICLES PRICED UNDER $3000!!!  BIG TIME! T...</td>\n",
       "      <td>f-150</td>\n",
       "      <td>fayetteville</td>\n",
       "      <td>https://fayar.craigslist.org</td>\n",
       "      <td>11900</td>\n",
       "      <td>98043.331443</td>\n",
       "      <td>38.49394</td>\n",
       "      <td>-94.748599</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>ford</td>\n",
       "      <td>6 cylinders</td>\n",
       "      <td>gas</td>\n",
       "      <td>clean</td>\n",
       "      <td>automatic</td>\n",
       "      <td>4wd</td>\n",
       "      <td>sedan</td>\n",
       "      <td>white</td>\n",
       "      <td>good</td>\n",
       "      <td>nan</td>\n",
       "      <td>2021-04-23T22:13:05-0400</td>\n",
       "      <td>fl</td>\n",
       "      <td>35 VEHICLES PRICED UNDER $3000!!!  BIG TIME! T...</td>\n",
       "      <td>f-150</td>\n",
       "      <td>florida keys</td>\n",
       "      <td>https://keys.craigslist.org</td>\n",
       "      <td>21000</td>\n",
       "      <td>98043.331443</td>\n",
       "      <td>38.49394</td>\n",
       "      <td>-94.748599</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>ford</td>\n",
       "      <td>6 cylinders</td>\n",
       "      <td>gas</td>\n",
       "      <td>clean</td>\n",
       "      <td>automatic</td>\n",
       "      <td>4wd</td>\n",
       "      <td>sedan</td>\n",
       "      <td>white</td>\n",
       "      <td>good</td>\n",
       "      <td>nan</td>\n",
       "      <td>2021-04-23T22:13:05-0400</td>\n",
       "      <td>ma</td>\n",
       "      <td>35 VEHICLES PRICED UNDER $3000!!!  BIG TIME! T...</td>\n",
       "      <td>f-150</td>\n",
       "      <td>worcester / central MA</td>\n",
       "      <td>https://worcester.craigslist.org</td>\n",
       "      <td>1500</td>\n",
       "      <td>98043.331443</td>\n",
       "      <td>38.49394</td>\n",
       "      <td>-94.748599</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>ford</td>\n",
       "      <td>6 cylinders</td>\n",
       "      <td>gas</td>\n",
       "      <td>clean</td>\n",
       "      <td>automatic</td>\n",
       "      <td>4wd</td>\n",
       "      <td>sedan</td>\n",
       "      <td>white</td>\n",
       "      <td>good</td>\n",
       "      <td>nan</td>\n",
       "      <td>2021-04-23T22:13:05-0400</td>\n",
       "      <td>nc</td>\n",
       "      <td>35 VEHICLES PRICED UNDER $3000!!!  BIG TIME! T...</td>\n",
       "      <td>f-150</td>\n",
       "      <td>greensboro</td>\n",
       "      <td>https://greensboro.craigslist.org</td>\n",
       "      <td>4900</td>\n",
       "      <td>98043.331443</td>\n",
       "      <td>38.49394</td>\n",
       "      <td>-94.748599</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  manufacturer    cylinders fuel title_status transmission drive   type  \\\n",
       "0         ford  6 cylinders  gas        clean    automatic   4wd  sedan   \n",
       "1         ford  6 cylinders  gas        clean    automatic   4wd  sedan   \n",
       "2         ford  6 cylinders  gas        clean    automatic   4wd  sedan   \n",
       "3         ford  6 cylinders  gas        clean    automatic   4wd  sedan   \n",
       "4         ford  6 cylinders  gas        clean    automatic   4wd  sedan   \n",
       "\n",
       "  paint_color condition year              posting_date state  \\\n",
       "0       white      good  nan  2021-04-23T22:13:05-0400    az   \n",
       "1       white      good  nan  2021-04-23T22:13:05-0400    ar   \n",
       "2       white      good  nan  2021-04-23T22:13:05-0400    fl   \n",
       "3       white      good  nan  2021-04-23T22:13:05-0400    ma   \n",
       "4       white      good  nan  2021-04-23T22:13:05-0400    nc   \n",
       "\n",
       "                                         description  model  \\\n",
       "0  35 VEHICLES PRICED UNDER $3000!!!  BIG TIME! T...  f-150   \n",
       "1  35 VEHICLES PRICED UNDER $3000!!!  BIG TIME! T...  f-150   \n",
       "2  35 VEHICLES PRICED UNDER $3000!!!  BIG TIME! T...  f-150   \n",
       "3  35 VEHICLES PRICED UNDER $3000!!!  BIG TIME! T...  f-150   \n",
       "4  35 VEHICLES PRICED UNDER $3000!!!  BIG TIME! T...  f-150   \n",
       "\n",
       "                   region                         region_url  price  \\\n",
       "0                prescott    https://prescott.craigslist.org   6000   \n",
       "1            fayetteville       https://fayar.craigslist.org  11900   \n",
       "2            florida keys        https://keys.craigslist.org  21000   \n",
       "3  worcester / central MA   https://worcester.craigslist.org   1500   \n",
       "4              greensboro  https://greensboro.craigslist.org   4900   \n",
       "\n",
       "       odometer       lat       long  \n",
       "0  98043.331443  38.49394 -94.748599  \n",
       "1  98043.331443  38.49394 -94.748599  \n",
       "2  98043.331443  38.49394 -94.748599  \n",
       "3  98043.331443  38.49394 -94.748599  \n",
       "4  98043.331443  38.49394 -94.748599  "
      ]
     },
     "execution_count": 29,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#concat table categorical and numerical to create new table without missing values\n",
    "df2 = pd.concat([categorical,numerical],axis=1)\n",
    "df2.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "818a3688",
   "metadata": {},
   "source": [
    " Analysis part\n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 76,
   "id": "ae7e3441",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 936x936 with 4 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "#outlier detection in numerical\n",
    "fig=plt.figure(figsize=(13,13))\n",
    "axes=330\n",
    "\n",
    "#put numerical\n",
    "for num in numerical:\n",
    "    axes += 2\n",
    "    fig.add_subplot(axes)\n",
    "    #set title of num\n",
    "    sns.boxplot(data = numerical, x=num, color=\"y\") \n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "17ab0070",
   "metadata": {},
   "source": [
    "Based on boxplot visualization for numeric feature. thevariable long, lat, and odomater has too many outliers\n",
    "so that we can drop it from the table.\n",
    "the price has so many outlier too.."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "id": "ba4d9096",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "5900.0"
      ]
     },
     "execution_count": 31,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['price'].quantile(0.25)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "id": "a8846ea8",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "26485.75"
      ]
     },
     "execution_count": 32,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['price'].quantile(0.75)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "id": "4cacd869",
   "metadata": {},
   "outputs": [],
   "source": [
    "Q1= df['price'].quantile(0.25)\n",
    "Q3 = df['price'].quantile(0.75)\n",
    "IQR = Q3-Q1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "id": "dc377fe9",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "20585.75"
      ]
     },
     "execution_count": 34,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "IQR"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "id": "cede9fe4",
   "metadata": {},
   "outputs": [],
   "source": [
    "lower_l = Q1 -1.5 * IQR\n",
    "upper_l = Q3+ 1.5 * IQR"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "id": "bd9b9281",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "-24978.625"
      ]
     },
     "execution_count": 36,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "lower_l"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "id": "ada3f1cc",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "57364.375"
      ]
     },
     "execution_count": 37,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "upper_l"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "id": "d91d104a",
   "metadata": {},
   "outputs": [],
   "source": [
    "out_l= (df['price'] < lower_l)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "id": "9721aa79",
   "metadata": {},
   "outputs": [],
   "source": [
    "out_u= (df['price'] > upper_l)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "id": "22009838",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "418703"
      ]
     },
     "execution_count": 40,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "len (df['price']) - (len (df['price'] [out_l]) + len (df['price'][out_u]))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "id": "20f9b483",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "204           58977\n",
       "280       987654321\n",
       "346           98900\n",
       "365           72900\n",
       "461           99950\n",
       "            ...    \n",
       "426694        59900\n",
       "426716        65950\n",
       "426778        65995\n",
       "426810        58995\n",
       "426840        65999\n",
       "Name: price, Length: 8177, dtype: int64"
      ]
     },
     "execution_count": 41,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['price'][(out_l| out_u)]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "id": "9e755b8d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0          6000\n",
       "1         11900\n",
       "2         21000\n",
       "3          1500\n",
       "4          4900\n",
       "          ...  \n",
       "426875    23590\n",
       "426876    30590\n",
       "426877    34990\n",
       "426878    28990\n",
       "426879    30590\n",
       "Name: price, Length: 418703, dtype: int64"
      ]
     },
     "execution_count": 42,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['price'][~(out_l | out_u)]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "id": "089ad982",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>region</th>\n",
       "      <th>region_url</th>\n",
       "      <th>price</th>\n",
       "      <th>year</th>\n",
       "      <th>manufacturer</th>\n",
       "      <th>model</th>\n",
       "      <th>condition</th>\n",
       "      <th>cylinders</th>\n",
       "      <th>fuel</th>\n",
       "      <th>odometer</th>\n",
       "      <th>title_status</th>\n",
       "      <th>transmission</th>\n",
       "      <th>drive</th>\n",
       "      <th>type</th>\n",
       "      <th>paint_color</th>\n",
       "      <th>description</th>\n",
       "      <th>state</th>\n",
       "      <th>lat</th>\n",
       "      <th>long</th>\n",
       "      <th>posting_date</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>prescott</td>\n",
       "      <td>https://prescott.craigslist.org</td>\n",
       "      <td>6000</td>\n",
       "      <td>nan</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>az</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>fayetteville</td>\n",
       "      <td>https://fayar.craigslist.org</td>\n",
       "      <td>11900</td>\n",
       "      <td>nan</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>ar</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>florida keys</td>\n",
       "      <td>https://keys.craigslist.org</td>\n",
       "      <td>21000</td>\n",
       "      <td>nan</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>fl</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>worcester / central MA</td>\n",
       "      <td>https://worcester.craigslist.org</td>\n",
       "      <td>1500</td>\n",
       "      <td>nan</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>ma</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>greensboro</td>\n",
       "      <td>https://greensboro.craigslist.org</td>\n",
       "      <td>4900</td>\n",
       "      <td>nan</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>nc</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>426875</th>\n",
       "      <td>wyoming</td>\n",
       "      <td>https://wyoming.craigslist.org</td>\n",
       "      <td>23590</td>\n",
       "      <td>2019.0</td>\n",
       "      <td>nissan</td>\n",
       "      <td>maxima s sedan 4d</td>\n",
       "      <td>good</td>\n",
       "      <td>6 cylinders</td>\n",
       "      <td>gas</td>\n",
       "      <td>32226.0</td>\n",
       "      <td>clean</td>\n",
       "      <td>other</td>\n",
       "      <td>fwd</td>\n",
       "      <td>sedan</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Carvana is the safer way to buy a car During t...</td>\n",
       "      <td>wy</td>\n",
       "      <td>33.786500</td>\n",
       "      <td>-84.445400</td>\n",
       "      <td>2021-04-04T03:21:31-0600</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>426876</th>\n",
       "      <td>wyoming</td>\n",
       "      <td>https://wyoming.craigslist.org</td>\n",
       "      <td>30590</td>\n",
       "      <td>2020.0</td>\n",
       "      <td>volvo</td>\n",
       "      <td>s60 t5 momentum sedan 4d</td>\n",
       "      <td>good</td>\n",
       "      <td>NaN</td>\n",
       "      <td>gas</td>\n",
       "      <td>12029.0</td>\n",
       "      <td>clean</td>\n",
       "      <td>other</td>\n",
       "      <td>fwd</td>\n",
       "      <td>sedan</td>\n",
       "      <td>red</td>\n",
       "      <td>Carvana is the safer way to buy a car During t...</td>\n",
       "      <td>wy</td>\n",
       "      <td>33.786500</td>\n",
       "      <td>-84.445400</td>\n",
       "      <td>2021-04-04T03:21:29-0600</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>426877</th>\n",
       "      <td>wyoming</td>\n",
       "      <td>https://wyoming.craigslist.org</td>\n",
       "      <td>34990</td>\n",
       "      <td>2020.0</td>\n",
       "      <td>cadillac</td>\n",
       "      <td>xt4 sport suv 4d</td>\n",
       "      <td>good</td>\n",
       "      <td>NaN</td>\n",
       "      <td>diesel</td>\n",
       "      <td>4174.0</td>\n",
       "      <td>clean</td>\n",
       "      <td>other</td>\n",
       "      <td>NaN</td>\n",
       "      <td>hatchback</td>\n",
       "      <td>white</td>\n",
       "      <td>Carvana is the safer way to buy a car During t...</td>\n",
       "      <td>wy</td>\n",
       "      <td>33.779214</td>\n",
       "      <td>-84.411811</td>\n",
       "      <td>2021-04-04T03:21:17-0600</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>426878</th>\n",
       "      <td>wyoming</td>\n",
       "      <td>https://wyoming.craigslist.org</td>\n",
       "      <td>28990</td>\n",
       "      <td>2018.0</td>\n",
       "      <td>lexus</td>\n",
       "      <td>es 350 sedan 4d</td>\n",
       "      <td>good</td>\n",
       "      <td>6 cylinders</td>\n",
       "      <td>gas</td>\n",
       "      <td>30112.0</td>\n",
       "      <td>clean</td>\n",
       "      <td>other</td>\n",
       "      <td>fwd</td>\n",
       "      <td>sedan</td>\n",
       "      <td>silver</td>\n",
       "      <td>Carvana is the safer way to buy a car During t...</td>\n",
       "      <td>wy</td>\n",
       "      <td>33.786500</td>\n",
       "      <td>-84.445400</td>\n",
       "      <td>2021-04-04T03:21:11-0600</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>426879</th>\n",
       "      <td>wyoming</td>\n",
       "      <td>https://wyoming.craigslist.org</td>\n",
       "      <td>30590</td>\n",
       "      <td>2019.0</td>\n",
       "      <td>bmw</td>\n",
       "      <td>4 series 430i gran coupe</td>\n",
       "      <td>good</td>\n",
       "      <td>NaN</td>\n",
       "      <td>gas</td>\n",
       "      <td>22716.0</td>\n",
       "      <td>clean</td>\n",
       "      <td>other</td>\n",
       "      <td>rwd</td>\n",
       "      <td>coupe</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Carvana is the safer way to buy a car During t...</td>\n",
       "      <td>wy</td>\n",
       "      <td>33.779214</td>\n",
       "      <td>-84.411811</td>\n",
       "      <td>2021-04-04T03:21:07-0600</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>418703 rows × 20 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                        region                         region_url  price  \\\n",
       "0                     prescott    https://prescott.craigslist.org   6000   \n",
       "1                 fayetteville       https://fayar.craigslist.org  11900   \n",
       "2                 florida keys        https://keys.craigslist.org  21000   \n",
       "3       worcester / central MA   https://worcester.craigslist.org   1500   \n",
       "4                   greensboro  https://greensboro.craigslist.org   4900   \n",
       "...                        ...                                ...    ...   \n",
       "426875                 wyoming     https://wyoming.craigslist.org  23590   \n",
       "426876                 wyoming     https://wyoming.craigslist.org  30590   \n",
       "426877                 wyoming     https://wyoming.craigslist.org  34990   \n",
       "426878                 wyoming     https://wyoming.craigslist.org  28990   \n",
       "426879                 wyoming     https://wyoming.craigslist.org  30590   \n",
       "\n",
       "          year manufacturer                     model condition    cylinders  \\\n",
       "0          nan          NaN                       NaN       NaN          NaN   \n",
       "1          nan          NaN                       NaN       NaN          NaN   \n",
       "2          nan          NaN                       NaN       NaN          NaN   \n",
       "3          nan          NaN                       NaN       NaN          NaN   \n",
       "4          nan          NaN                       NaN       NaN          NaN   \n",
       "...        ...          ...                       ...       ...          ...   \n",
       "426875  2019.0       nissan         maxima s sedan 4d      good  6 cylinders   \n",
       "426876  2020.0        volvo  s60 t5 momentum sedan 4d      good          NaN   \n",
       "426877  2020.0     cadillac          xt4 sport suv 4d      good          NaN   \n",
       "426878  2018.0        lexus           es 350 sedan 4d      good  6 cylinders   \n",
       "426879  2019.0          bmw  4 series 430i gran coupe      good          NaN   \n",
       "\n",
       "          fuel  odometer title_status transmission drive       type  \\\n",
       "0          NaN       NaN          NaN          NaN   NaN        NaN   \n",
       "1          NaN       NaN          NaN          NaN   NaN        NaN   \n",
       "2          NaN       NaN          NaN          NaN   NaN        NaN   \n",
       "3          NaN       NaN          NaN          NaN   NaN        NaN   \n",
       "4          NaN       NaN          NaN          NaN   NaN        NaN   \n",
       "...        ...       ...          ...          ...   ...        ...   \n",
       "426875     gas   32226.0        clean        other   fwd      sedan   \n",
       "426876     gas   12029.0        clean        other   fwd      sedan   \n",
       "426877  diesel    4174.0        clean        other   NaN  hatchback   \n",
       "426878     gas   30112.0        clean        other   fwd      sedan   \n",
       "426879     gas   22716.0        clean        other   rwd      coupe   \n",
       "\n",
       "       paint_color                                        description state  \\\n",
       "0              NaN                                                NaN    az   \n",
       "1              NaN                                                NaN    ar   \n",
       "2              NaN                                                NaN    fl   \n",
       "3              NaN                                                NaN    ma   \n",
       "4              NaN                                                NaN    nc   \n",
       "...            ...                                                ...   ...   \n",
       "426875         NaN  Carvana is the safer way to buy a car During t...    wy   \n",
       "426876         red  Carvana is the safer way to buy a car During t...    wy   \n",
       "426877       white  Carvana is the safer way to buy a car During t...    wy   \n",
       "426878      silver  Carvana is the safer way to buy a car During t...    wy   \n",
       "426879         NaN  Carvana is the safer way to buy a car During t...    wy   \n",
       "\n",
       "              lat       long              posting_date  \n",
       "0             NaN        NaN                       NaN  \n",
       "1             NaN        NaN                       NaN  \n",
       "2             NaN        NaN                       NaN  \n",
       "3             NaN        NaN                       NaN  \n",
       "4             NaN        NaN                       NaN  \n",
       "...           ...        ...                       ...  \n",
       "426875  33.786500 -84.445400  2021-04-04T03:21:31-0600  \n",
       "426876  33.786500 -84.445400  2021-04-04T03:21:29-0600  \n",
       "426877  33.779214 -84.411811  2021-04-04T03:21:17-0600  \n",
       "426878  33.786500 -84.445400  2021-04-04T03:21:11-0600  \n",
       "426879  33.779214 -84.411811  2021-04-04T03:21:07-0600  \n",
       "\n",
       "[418703 rows x 20 columns]"
      ]
     },
     "execution_count": 43,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df= df[~(out_l | out_u)]\n",
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "id": "789be2cf",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<function matplotlib.pyplot.show(close=None, block=None)>"
      ]
     },
     "execution_count": 44,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.boxplot(x= df['price'], color='y')\n",
    "plt.show"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "id": "b5e12ce6",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<function matplotlib.pyplot.show(close=None, block=None)>"
      ]
     },
     "execution_count": 45,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.distplot(df['price'], bins=10 ,kde = False, color='y')\n",
    "plt.show"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "id": "a1d9294c",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>manufacturer</th>\n",
       "      <th>cylinders</th>\n",
       "      <th>fuel</th>\n",
       "      <th>title_status</th>\n",
       "      <th>transmission</th>\n",
       "      <th>drive</th>\n",
       "      <th>type</th>\n",
       "      <th>paint_color</th>\n",
       "      <th>condition</th>\n",
       "      <th>year</th>\n",
       "      <th>posting_date</th>\n",
       "      <th>state</th>\n",
       "      <th>description</th>\n",
       "      <th>model</th>\n",
       "      <th>region</th>\n",
       "      <th>region_url</th>\n",
       "      <th>price</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>ford</td>\n",
       "      <td>6 cylinders</td>\n",
       "      <td>gas</td>\n",
       "      <td>clean</td>\n",
       "      <td>automatic</td>\n",
       "      <td>4wd</td>\n",
       "      <td>sedan</td>\n",
       "      <td>white</td>\n",
       "      <td>good</td>\n",
       "      <td>nan</td>\n",
       "      <td>2021-04-23T22:13:05-0400</td>\n",
       "      <td>az</td>\n",
       "      <td>35 VEHICLES PRICED UNDER $3000!!!  BIG TIME! T...</td>\n",
       "      <td>f-150</td>\n",
       "      <td>prescott</td>\n",
       "      <td>https://prescott.craigslist.org</td>\n",
       "      <td>6000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>ford</td>\n",
       "      <td>6 cylinders</td>\n",
       "      <td>gas</td>\n",
       "      <td>clean</td>\n",
       "      <td>automatic</td>\n",
       "      <td>4wd</td>\n",
       "      <td>sedan</td>\n",
       "      <td>white</td>\n",
       "      <td>good</td>\n",
       "      <td>nan</td>\n",
       "      <td>2021-04-23T22:13:05-0400</td>\n",
       "      <td>ar</td>\n",
       "      <td>35 VEHICLES PRICED UNDER $3000!!!  BIG TIME! T...</td>\n",
       "      <td>f-150</td>\n",
       "      <td>fayetteville</td>\n",
       "      <td>https://fayar.craigslist.org</td>\n",
       "      <td>11900</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>ford</td>\n",
       "      <td>6 cylinders</td>\n",
       "      <td>gas</td>\n",
       "      <td>clean</td>\n",
       "      <td>automatic</td>\n",
       "      <td>4wd</td>\n",
       "      <td>sedan</td>\n",
       "      <td>white</td>\n",
       "      <td>good</td>\n",
       "      <td>nan</td>\n",
       "      <td>2021-04-23T22:13:05-0400</td>\n",
       "      <td>fl</td>\n",
       "      <td>35 VEHICLES PRICED UNDER $3000!!!  BIG TIME! T...</td>\n",
       "      <td>f-150</td>\n",
       "      <td>florida keys</td>\n",
       "      <td>https://keys.craigslist.org</td>\n",
       "      <td>21000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>ford</td>\n",
       "      <td>6 cylinders</td>\n",
       "      <td>gas</td>\n",
       "      <td>clean</td>\n",
       "      <td>automatic</td>\n",
       "      <td>4wd</td>\n",
       "      <td>sedan</td>\n",
       "      <td>white</td>\n",
       "      <td>good</td>\n",
       "      <td>nan</td>\n",
       "      <td>2021-04-23T22:13:05-0400</td>\n",
       "      <td>ma</td>\n",
       "      <td>35 VEHICLES PRICED UNDER $3000!!!  BIG TIME! T...</td>\n",
       "      <td>f-150</td>\n",
       "      <td>worcester / central MA</td>\n",
       "      <td>https://worcester.craigslist.org</td>\n",
       "      <td>1500</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>ford</td>\n",
       "      <td>6 cylinders</td>\n",
       "      <td>gas</td>\n",
       "      <td>clean</td>\n",
       "      <td>automatic</td>\n",
       "      <td>4wd</td>\n",
       "      <td>sedan</td>\n",
       "      <td>white</td>\n",
       "      <td>good</td>\n",
       "      <td>nan</td>\n",
       "      <td>2021-04-23T22:13:05-0400</td>\n",
       "      <td>nc</td>\n",
       "      <td>35 VEHICLES PRICED UNDER $3000!!!  BIG TIME! T...</td>\n",
       "      <td>f-150</td>\n",
       "      <td>greensboro</td>\n",
       "      <td>https://greensboro.craigslist.org</td>\n",
       "      <td>4900</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  manufacturer    cylinders fuel title_status transmission drive   type  \\\n",
       "0         ford  6 cylinders  gas        clean    automatic   4wd  sedan   \n",
       "1         ford  6 cylinders  gas        clean    automatic   4wd  sedan   \n",
       "2         ford  6 cylinders  gas        clean    automatic   4wd  sedan   \n",
       "3         ford  6 cylinders  gas        clean    automatic   4wd  sedan   \n",
       "4         ford  6 cylinders  gas        clean    automatic   4wd  sedan   \n",
       "\n",
       "  paint_color condition year              posting_date state  \\\n",
       "0       white      good  nan  2021-04-23T22:13:05-0400    az   \n",
       "1       white      good  nan  2021-04-23T22:13:05-0400    ar   \n",
       "2       white      good  nan  2021-04-23T22:13:05-0400    fl   \n",
       "3       white      good  nan  2021-04-23T22:13:05-0400    ma   \n",
       "4       white      good  nan  2021-04-23T22:13:05-0400    nc   \n",
       "\n",
       "                                         description  model  \\\n",
       "0  35 VEHICLES PRICED UNDER $3000!!!  BIG TIME! T...  f-150   \n",
       "1  35 VEHICLES PRICED UNDER $3000!!!  BIG TIME! T...  f-150   \n",
       "2  35 VEHICLES PRICED UNDER $3000!!!  BIG TIME! T...  f-150   \n",
       "3  35 VEHICLES PRICED UNDER $3000!!!  BIG TIME! T...  f-150   \n",
       "4  35 VEHICLES PRICED UNDER $3000!!!  BIG TIME! T...  f-150   \n",
       "\n",
       "                   region                         region_url  price  \n",
       "0                prescott    https://prescott.craigslist.org   6000  \n",
       "1            fayetteville       https://fayar.craigslist.org  11900  \n",
       "2            florida keys        https://keys.craigslist.org  21000  \n",
       "3  worcester / central MA   https://worcester.craigslist.org   1500  \n",
       "4              greensboro  https://greensboro.craigslist.org   4900  "
      ]
     },
     "execution_count": 46,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#drop column long lat and odometer because there is too many outliers.\n",
    "d_final = df2.drop(columns=['long', 'lat', 'odometer'])\n",
    "d_final.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "id": "f5967c75",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x360 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "#1 For Category\n",
    "con=df['condition'].value_counts().head(30)\n",
    "plt.figure(figsize=(10,5))\n",
    "sns.barplot(con.index,con, color='y')\n",
    "plt.xticks(rotation=45,fontsize=15)\n",
    "plt.yticks(fontsize=15);\n",
    "plt.title('The condition of cars');"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "id": "f94aa4b6",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x360 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "#2\n",
    "\n",
    "cl=df['cylinders'].value_counts().head(30)\n",
    "plt.figure(figsize=(10,5))\n",
    "sns.barplot(cl.index,cl ,color='y')\n",
    "plt.xticks(rotation=45,fontsize=15)\n",
    "plt.yticks(fontsize=15);\n",
    "plt.title('The cylinders of cars');"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 49,
   "id": "c45b97ad",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 720x360 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "#3\n",
    "\n",
    "paint=df['paint_color'].value_counts().head(30)\n",
    "plt.figure(figsize=(10,5))\n",
    "sns.barplot(paint.index,paint, color='y')\n",
    "plt.xticks(rotation=45,fontsize=15)\n",
    "plt.yticks(fontsize=15);\n",
    "plt.title('The paint color of Cars');"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "78fbc5b3",
   "metadata": {},
   "source": [
    "# Questions :\n",
    "\n",
    "# 1. The most common manufacturers in dataset based on number of cars.\n",
    "\n",
    "# 2. The Highest Price Based on Types of Cars.\n",
    "\n",
    "# 3. 3-The most transmission type used based on manufacturer?\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "19a823fc",
   "metadata": {},
   "source": [
    "The answer for first Question"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "id": "2ebf81b3",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 2500x1500 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "manufacturers_counts = df['manufacturer'].value_counts().to_dict()\n",
    "fig = plt.figure(figsize=(25, 15), dpi= 100, facecolor='w', edgecolor='w')\n",
    "plt.bar(manufacturers_counts.keys(),manufacturers_counts.values(),color=['y','grey'])\n",
    "plt.xticks(rotation = 90);\n",
    "plt.xlabel('Manufacturer');\n",
    "plt.ylabel('Number of cars on sale');"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "457ad8a4",
   "metadata": {},
   "source": [
    " ^  the most frequent manufacturers in the top are : (Ford, Chevrolet, toyota, etc.). "
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8f16de3a",
   "metadata": {},
   "source": [
    "The answer for Highest Price Based on Type Car?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 51,
   "id": "9bc591b1",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>price</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>type</th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>coupe</th>\n",
       "      <td>19609.527426</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>convertible</th>\n",
       "      <td>17007.190649</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>SUV</th>\n",
       "      <td>15498.444540</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>hatchback</th>\n",
       "      <td>14342.363055</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>bus</th>\n",
       "      <td>13764.279612</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                    price\n",
       "type                     \n",
       "coupe        19609.527426\n",
       "convertible  17007.190649\n",
       "SUV          15498.444540\n",
       "hatchback    14342.363055\n",
       "bus          13764.279612"
      ]
     },
     "execution_count": 51,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "joins = df[['manufacturer','type','price']]\n",
    "\n",
    "join_group =joins.groupby('type').mean().head(5).sort_values('price',ascending=False)\n",
    "\n",
    "\n",
    "join_group"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 52,
   "id": "d6af63b9",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 864x432 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "\n",
    "plt.figure(figsize=(12,6))\n",
    "\n",
    "x=range(5)\n",
    "plt.bar(x,join_group['price'], color=['y','grey'])\n",
    "plt.xticks(x,join_group.index)\n",
    "plt.xlabel('Type of Cars')\n",
    "plt.ylabel('Price')\n",
    "plt.title('5 Most Highest Price Based on Type of Cars')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 53,
   "id": "e4908209",
   "metadata": {},
   "outputs": [],
   "source": [
    "# The Coupe cars the most highest price after that Convertible cars while lowest price for bus type."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "9985fc71",
   "metadata": {},
   "source": [
    "The most transmission type used based on manufacturer?\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 54,
   "id": "7044b0ac",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 864x504 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "\n",
    "trans_ser = df.groupby('manufacturer').transmission.value_counts()\n",
    "trans_ser_df = pd.DataFrame(trans_ser.unstack())\n",
    "\n",
    "plt.subplots(figsize=(12, 7))\n",
    "sns.heatmap(trans_ser_df,  cmap='gray_r', linecolor='olive',linewidth=1);"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "6265a546",
   "metadata": {},
   "source": [
    " The most Manufacturer used automatic transmission and no surprise in that."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f57664f8",
   "metadata": {},
   "source": [
    "The type of cylinders based on price of Cars."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 55,
   "id": "a20fddc6",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "cylinder_with_price=df[['cylinders','price']]\n",
    "cylinder_with_price=cylinder_with_price[cylinder_with_price['price']<=150000]\n",
    "\n",
    "\n",
    "\n",
    "fig.add_subplot(2,1,2)\n",
    "state=cylinder_with_price[['cylinders','price']].groupby('cylinders').mean().sort_values('price',ascending=False).head(20)\n",
    "state.reset_index(level=0,inplace=True)\n",
    "\n",
    "plt.bar(state['cylinders'],state['price'], color=['y','silver'])\n",
    "               \n",
    "plt.xticks(rotation=90,fontsize=15)\n",
    "plt.subplots_adjust(hspace = 0.5)\n",
    "plt.xlabel('cylinders')\n",
    "plt.ylabel('Price')\n",
    "plt.title('The type of cylinders based on price of Cars');\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e3abab4e",
   "metadata": {},
   "source": [
    "Price of type of cars for each type of fuel"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 56,
   "id": "5cab278c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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A+Dpp59m1113Zf3112fEiBH87ne/Y+LEiey1115svfXWjBw5sk3T2cpr33333e32rXz99deZM2cOzz77bKsmsI3GIFKSJElSQ6g0HV1ppZXabOvZsycrrLDCfF/jrbfeAuCaa66Z537vvvvu3Ne94447OOmkk7j22ms57rjjAFhuueU45JBDOPXUU1l22WVbvfZPf/rTUq/dqGzOKkmSJKkhVKbreO2119psmzNnztwgrsxrXH/99cQYO1zGjBkz95jll1+es846i5dffnnuIDkf/vCH+fnPf85RRx3V5rWnT58+z9durya1kRhESpIkSWoIH/nIR4DUXLTaPffcw+zZs+f7GltsscXc/RfG2muvzeGHH87dd9/Nsssuy/XXX99pr90oDCIlSZIkNYRDDz0USKOxTp06de76999/n+OPP77Ua+y1116stdZa/OIXv+Dmm9sfS+L+++/nP//5DwAvvvgiTz75ZJt93n77bT744INWA+4cffTR9O7dm2OPPZZnn322zTEzZ87sFgGmfSIlSZIkNYStttqKr33ta/zsZz9jww03ZL/99ps7T+Tyyy/P0KFD5/savXv35ve//z077bQTu+22Gx//+McZMWIESy+9NC+//DIPP/wwL7zwAlOmTGHppZfm8ccfZ5999mGzzTZjww03ZJVVVuGNN97g+uuvZ9asWXP7SAJ8+MMf5pJLLuGwww5jgw02YOedd2bddddl1qxZvPTSS9xzzz0MGTKEZ555pitPU5cziJQkSZLUMM455xzWXXddfvGLX3DhhReywgorsM8++/CjH/2ITTbZpNRrbLzxxjz++OOceeaZ3HTTTVx66aX06NGDoUOHsummm/KDH/yAwYMHAzBy5EiOP/547r77bv70pz/x9ttvM2TIEDbbbDO+/vWvs8suu7R67c9//vNssskmnHHGGdx5553ceuutLLPMMqyyyirst99+HHjggZ1+Tha3EGOsdRrqzsiRI+P48eNrnQypFaf4kCRpyfb000+z3nrr1ToZanBlr6MQwiMxxpHtbbNPpCRJkiSpNINISZIkSVJpBpGSJEmSpNIMIiVJkiRJpRlESpIkSZJKM4iUJEmSJJVmEClJkiRJKs0gUpIkSZJUmkGkJEmSJKk0g0hJkiRJUmkGkZIkSZKk0gwiJUmSJEmlGURKkiRJkkoziJQkSZLULW277baEEGqdjAVy6KGHEkJgwoQJtU5Kh3rVOgGSJEmSFt0LL1xX6yTM05pr7lPrJCwWTU1NAHUdBC4qayIlSZIkqU6ceuqpPP300wwbNqzWSemQNZGSJEmSVCeGDh3K0KFDa52MebImUpIkSVJDefDBB9lvv/1YeeWV6dOnD8OHD+fII49k8uTJpV/jz3/+M7vuuiuDBw+mb9++rLXWWnz7299m2rRp7e4/adIkvv71r7POOuvQr18/Bg0axOabb84Pf/hDAO666y5CCEycOJGJEycSQpi7HHrooXNfJ4TAtttuy6uvvsqXvvQlhg0bRs+ePRk3bhww7z6RDz30EAceeCDDhg2jb9++DB06lB133JGrr766dL47gzWRkiRJkhrGpZdeyhFHHEHfvn3Zc889GT58OM899xwXX3wxN954Iw888ACrrbbaPF/jpJNOYsyYMQwaNIjdd9+dFVdckX/84x+cfvrp3Hzzzdx///30799/7v7jx49np512YurUqWyzzTbsu+++/Oc//+Gpp55i7NixfP/736epqYkxY8Zw9tlnA3DMMcfMPX7EiBGt/v/UqVPZYostWHbZZdl3333p0aMHK6200jzT/Mtf/pKjjjqKnj17sueee7LOOuvw+uuvM378eM477zwOOOCABTqPi8IgUpIkSVJDePbZZznyyCNpamri7rvvbtVv8I477mCHHXbgG9/4Btdd1/EgQ3feeSdjxoxhyy235Oabb2bgwIFzt40bN44vfvGLjBkzhrPOOguAmTNnsv/++zN16lSuuOIKDjrooFav9/LLLwNpQJ2xY8fOrVEcO3Zsh2n45z//ycEHH8wll1xCr17zD8meeuopvvKVr9C/f3/uueceNthgg1bbJ02aNN/X6Ew2Z5UkSZLUEM4//3xmzZrFOeec02bgme22244999yTG2+8kRkzZnT4Gueeey6QavaKASSkpqQjRozgiiuumLvuxhtvZMKECey5555tAkiA4cOHL3A++vTpw+mnn14qgISU79mzZ/P973+/TQAJsOqqqy5wGhaFNZGSJEmSGsL9998PwN13383DDz/cZvvrr7/OnDlzePbZZ9lss806fI3evXtzzTXXcM0117TZPnPmTN544w3eeustVlhhBR544AEAdtlll07LR1NTEyuuuGLp/bsiDYvCIFKSJElSQ3jrrbcA+OlPfzrP/d599915vsbs2bP5wQ9+MN/XWGGFFeYOtNOZU26svPLKC7R/V6RhURhESpIkSWoIAwYMAGD69OmtBr5Z0Ndobm5m6tSppfavNHl95ZVXFur/tSeEsED7F9Pw4Q9/uNPSsbDsEylJkiSpIWyxxRYA3HPPPYv0Gm+//TZPPvnkAv3PW265pdT+PXv2ZM6cOQudvs5IQ1cziJQkSZLUEI4++mh69+7Nsccey7PPPttm+8yZM+cbYB577LEAHHHEEe3OK/nee+/N7YMIsMcee9DU1MQNN9zA7373uzb7V9dQrrDCCrzxxhv897//LZWnMo466ih69erFD3/4Q5566qk22xf36Kw2Z5UkSZLUED784Q9zySWXcNhhh7HBBhuw8847s+666zJr1ixeeukl7rnnHoYMGcIzzzzT4Wtsv/32nHbaaRx//PGss8467Lrrrqyxxhq8++67TJw4kbvvvputt96aP/3pT0AaSfWaa65hxx135KCDDuLCCy9kiy224P333+fpp5/m9ttvZ/bs2a1e/+GHH2bnnXdmm222oW/fvmyyySbsscceC53v9ddfn/POO48vf/nLbLrppuy1116ss846vPXWW4wfP57llluOO++8c6Fff0EZREqSJElqGJ///OfZZJNNOOOMM7jzzju59dZbWWaZZVhllVXYb7/9OPDAA+f7GscddxxbbbUV5557Lvfeey/XX389AwYMYNiwYYwePbrNVB4jR47kscce47TTTuOWW27hvvvuY7nllmPttdduM0DPiSeeyLRp07jxxhv529/+xpw5czjkkEMWKYiEVHO64YYbcvrpp3PXXXfxhz/8gcGDB7PxxhvzpS99aZFee0GFGONi/YeNYOTIkXH8+PG1TobUyq237lpqvx13vLmLUyJJkmrh6aefZr311qt1MtTgyl5HIYRHYowj29tmn0hJkiRJUmkGkZIkSZKk0gwiJUmSJEmlGURKkiRJkkoziJQkSZIklWYQKUmSJEkqzSBSkiRJklSaQaQkSZIkqTSDSEmSJElSaQaRkiRJkqTSDCIlSZIkSaUZREqSJEmSSutV6wRIkiSp+3nhhetK77vmmvt0YUokdTZrIiVJkiRJpVkTKUmSJHUD48efWOskzNPIkSfXOgnqJNZESpIkSZJKM4iUJEmSJJVmEClJkiSpYcQYOeecc1h//fXp168fw4YN4+ijj2b69Ok0NTXR1NQ0d9/p06fz05/+lO22245VV12VPn36MGTIEPbcc08eeOCBdl//nnvuYY899mDVVVelb9++rLzyymyxxRb84Ac/WEw5rH/2iZQkSZLUML761a9y/vnns8oqqzB69Gj69OnDDTfcwEMPPcSsWbPo3bv33H2ffvppvve977HNNtuw2267sfzyy/PSSy9xww03cMstt3DjjTey8847z93/T3/6E7vtthv9+/dnzz33ZNiwYUydOpWnn36a8847jzFjxtQiy3XHIFKSJElSQ7jnnns4//zzWXfddXnwwQcZOHAgAD/60Y/49Kc/zeTJk1l99dXn7r/eeusxefJkBg8e3Op1Jk2axOabb86xxx7bKoj85S9/SXNzM3fddRebbLJJq2PefPPNrstYg7E5qyRJkqSGcNlllwHwve99b24ACdCnTx9OPfXUNvsPGDCgTQAJsOqqq7LffvvxzDPP8NJLL7XZvtRSS7VZ197rLKkMIiVJkiQ1hL///e8AbL311m22bbHFFvTq1bah5d/+9jcOOOAAhg8fTt++fQkhEELgZz/7GQCvvPLK3H0/97nPAfCxj32ML3/5y1x11VVMmjSpK7LS0GzOKkmSJKkhTJ8+HYCVVlqpzbaePXuywgortFp33XXXsd9++9GvXz922GEH1lprLZZZZhl69OjBXXfdxd13380HH3wwd/99992Xm266iTPOOINLLrmECy+8EIDNNtuMU089lR122KELc9c4ahpEhhD6AX8F+ua0XBtjHBNCGARcBTQBE4ADYoxv52OOBw4H5gBfjzH+Oa/fDBgHLAXcDHwjxhhDCH2By4HNgLeAA2OMExZTFiVJkiR1kv79+wPw2muvseaaa7baNmfOHN566y2GDRs2d933v/99+vTpw/jx41lvvfVa7X/kkUdy9913t/kfu+22G7vtthvvvfceDz74IDfddBPnn38+u+++O3//+99Zf/31uyBnjaXWzVk/ALaLMW4CjAB2DiFsAXwXuD3GuA5we/6bEML6wChgA2Bn4LwQQs/8WucDo4F18lLpIXs48HaMcW3gLODHiyFfkiRJkjrZpptuCsC9997bZtsDDzzA7NmzW617/vnnWX/99dsEkM3Nze2+RtEyyyzDdtttx5lnnskJJ5zAzJkzueWWWxYxB91DTYPImLyb/+ydlwjsBVyW118G7J1/3wu4Msb4QYzxReB5YPMQwlCgf4zx/hhjJNU8Fo+pvNa1wPYhhNB1uZIkSZLUFb7whS8AcMopp8xt2gowc+ZMTjjhhDb7NzU18dxzzzF58uS562KM/OAHP+Cpp55qs//tt9/Of//73zbrX3vtNQCWXnrpRc5Dd1DzPpG5JvERYG3gFzHGB0MIK8UYpwDEGKeEEFbMuw8DirOCTsrrZuXfq9dXjnk5v9bsEMJ0YAXAMXolSdICmzZtYqn9Bg5cff47SVogn/zkJxk9ejQXXXQRG2ywAZ/5zGfo3bs3N954IwMGDGCVVVahR4+WerJjjz2WL3/5y2y66aZz9/3b3/7GU089xR577MGNN97Y6vW/+c1vMmHCBLbddluampro06cPjzzyCHfccQerr746o0aNWtxZrku1bs5KjHFOjHEEsCqpVnHDeezeXg1inMf6eR3T+oVDGB1CGB9CGP/GG2/MJ9WSJEmSauH888/nzDPPZNlll+WCCy7gt7/9LZ/+9Ke57bbbeOedd+b2m4TU7/HSSy9l6NChXHbZZVxxxRUMHz6cBx98kI985CNtXvuEE05gl1124cknn+Tiiy/mggsu4LXXXuOEE07g4YcfZvnll1+cWa1bNa+JrIgxTgsh3EXqy/haCGForoUcCryed5sEDC8ctiowOa9ftZ31xWMmhRB6AQOAqe38/4uAiwBGjhzZJsiUJEmS6tnIkSfXOgmLRY8ePTj22GM59thjW61/7rnnePfdd9v0fzz00EM59NBD27zORhttxNixY1utO+CAAzjggAM6O8ndTk1rIkMIQ0IIA/PvSwGfBp4BbgAOybsdAlyff78BGBVC6BtCWIM0gM5DuenrjBDCFrm/4xeqjqm81n7AHbnfpCRJkqQG8+qrr9Lc3Nxq3X/+8x+OOeYYAPbZZ58apGrJUuuayKHAZblfZA/g6hjjTSGE+4GrQwiHAy8B+wPEGJ8MIVwNPAXMBr4aY5yTX+soWqb4uCUvAL8Cfh1CeJ5UA2lDZkmSJKlBnX322fzud79j2223ZejQobz66qvcfvvtTJo0iV122YX999+/1kns9moaRMYY/wFs2s76t4DtOzjmFOCUdtaPB9r0p4wxvk8OQiVJkiQ1th122IHHH3+cW2+9lalTp9KrVy/WXXddvv71r3PMMcfgRAxdr9Y1kZIkSZJU2vbbb8/227db36TFpOajs0qSJEmSGodBpCRJkiSpNINISZIkSVJpBpGSJEmSpNIMIiVJkiRJpRlESpIkSZJKM4iUJEmSJJVmEClJkiRJKs0gUpIkSZJUmkGkJEmSpIYxYcIEQggceuihXfL6Y8eOJYTAXXfd1WmvOW7cOEIIjBs3rvQxhx56KCEEJkyY0Gnp6Cy9ap0ASZIkSYvu1lt3rXUS5mnHHW+udRLUSQwiJUmSJKkL7bPPPmyxxRYMHTq01knpFAaRkiRJ3cyVV5Z7UB01akoXp0QSwIABAxgwYECtk9Fp7BMpSZIkqSFNmDCBUaNGMXjwYPr168fIkSO56aab5m6/4IILCCFw0kkntXv8q6++Su/evdloo43a3X7ZZZex6aabstRSS7Hiiity2GGH8eqrr7bZb9tttyWEwMyZMznppJP40Ic+RN++fef225xXn8i//OUvfOITn2CZZZZh0KBB7L333jzzzDMLfjIWI2siJXU7lsBLktT9TZw4kc0335w111yTgw8+mKlTp3LVVVex11578Ze//IVPfepTfP7zn+e4447j4osv5nvf+x49e/Zs9RqXXHIJs2fP5sgjj2zz+meddRa33norBx54IDvvvDP33nsvl156KXfddRcPPvggQ4YMaXPMZz7zGR5++GF22WUX9t57b1ZcccV55uHaa6/lwAMPpE+fPhx44IEMHTqUe++9ly233JKNN9540U5QFzKIlCRJktRw7rrrLsaOHcuYMWPmrjvooIPYeeed+elPf8qnPvUpll12WQ4++GB+8YtfcMstt7D77rvP3TfGyMUXX8zSSy/NwQcf3Ob1b7nlFh588EE23XTTueuOPfZYzj77bL773e/yq1/9qs0xEydO5IknnmDw4MHzTf+7777LkUceSY8ePbjnnnsYOXJkm/9Tr2zOKkmSJKnhrL766px44omt1u20006sttpqPPTQQ3PXHXXUUQBceOGFrfa99dZbefHFFznwwAPb7a948MEHtwogIU3/MWDAAH7729/ywQcftDnmhz/8YakAEuD6669n6tSpHHTQQa0CyOL/qVcGkZIkSZIazogRI9o0TwUYPnw4b7/99ty/N9hgA7bZZhtuueUWXn755bnrL7roIgC+/OUvt/v6n/zkJ9usGzBgACNGjOD999/n6aefbrN98803L53+Rx99dL7/p14ZREqSJElqOAMHDmx3fa9evWhubm617itf+Qpz5szh4osvBtKAOjfccAMjRozoMPBbaaWV2l2/8sorAzB9+vQOt5VROX5+/6ceGURKkiRJ6tb23XdfVlppJX71q18xZ86ceQ6oU/Haa6+1u74yOmt7zU1DCKXTVDl+fv+nHhlESpIkSerWevfuzZe+9CVeeeUVbrzxRi6++GKWXXZZPve5z3V4zN13391m3fTp03nsscfo168f66233iKl6SMf+ch8/0+9MoiUJEmS1O2NHj2anj17cvTRR/Piiy9y0EEHsdxyy3W4/69//Wv+/ve/t1o3duxYpk+fzmc/+1n69u27SOnZa6+9WH755fntb3/L+PHj2/0/9copPiRJkiR1e6utthq77bYbN9xwA8A8m7IC7LLLLmy11VYccMABc+dvvPfee2lqauK0005b5PQsu+yyXHTRRRx44IF84hOfaDVP5BNPPME222zDX//610X+P13BmkhJkiRJS4TDDjsMgJEjR85tTtqRY489lvPOO4/HHnuMs88+m2eeeYZDDz2U++67jxVXXLFT0rPffvvxpz/9ic0224yrr76aCy64gEGDBnH//fezxhprdMr/6ArWREqSJEndwI473lzrJCwWTU1NxBg73H7XXXd1uK3SPLWjaT0gNSUdO3bs3L8PPfTQ+aZpXv+z8hodvc4OO+zADjvs0Gb9uHHjGDdu3Hz/dy1YEylJkiSp25sxY8bcmr7PfvaztU5OQ7MmUpIkSVK39cc//pFHH32UG2+8kddee43TTz+dpZdeutbJamgGkZIkSZK6rWuuuYbLLruMlVZaieOPP55jjz221klqeAaRkiRJkrqteu5b2KjsEylJkiRJKs0gUpIkSZJUmkGkJEmSJKk0g0hJkiRJUmkGkZIkSZKk0gwiJUmSJEmlGURKkiRJkkoziJQkSZIklWYQKUmSJEkqzSBSkiRJ0hIphMC2225b62Q0nF61ToAkSZKkRXfllUNrnYR5GjVqymL/n01NTQBMmDBhsf/v7swgUupmFuQLpBY3c0mSJDU2m7NKkiRJkkoziJQkSZLUUK6++mq22WYbBgwYwFJLLcVGG23EqaeeygcffADAXXfdRQiBiRMnMnHiREIIc5dDDz20zeu9+eabjB49mqFDh9K3b1822GADLr300g7//5///Gd23XVXBg8eTN++fVlrrbX49re/zbRp09rs29TURFNTE++88w7/8z//Q1NTE71792bs2LGddDYWP5uzSpIkSWoYJ5xwAqeeeiqDBw/moIMOYtlll+WWW27hhBNO4M9//jO33XYbTU1NjBkzhrPPPhuAY445Zu7xI0aMaPV606ZNY6uttqJPnz7st99+vP/++1x77bUcdthh9OjRg0MOOaTV/ieddBJjxoxh0KBB7L777qy44or84x//4PTTT+fmm2/m/vvvp3///q2OmTlzJttttx1Tp05lxx13pH///qyxxhpdcXoWC4NISZIkSQ3h/vvv59RTT2X48OE89NBDrLzyygCceuqp7LPPPtx000389Kc/5YQTTmDs2LGMGzcOYJ61fo8//jiHH344F154IT179gTg2GOPZeONN+bHP/5xqyDyzjvvZMyYMWy55ZbcfPPNDBw4cO62cePG8cUvfpExY8Zw1llntfofU6ZMYf311+fuu+9mmWWW6ZyTUUMGkZIkSQ3g1lt3rXUSpJq75JJLADjxxBPnBpAAvXr14owzzuDmm2/m4osv5oQTTij9mksvvTRnnnnm3AASYP3112errbbir3/9KzNmzGC55ZYD4NxzzwXgl7/8ZasAEuDQQw/lnHPO4YorrmgTRAKcccYZ3SKABINISZIkSQ3i0UcfBWC77bZrs23ddddl1VVX5cUXX2TatGltgryOrLPOOm2anwIMHz4cSM1dK0Hk/fffT+/evbnmmmu45ppr2hwzc+ZM3njjDd566y1WWGGFuev79evHxhtvXCo9jcAgUpIkSVJDmD59OgBDh7Y/pdnQoUN56aWXmD59eukgsqP9evVKodKcOXPmrnvrrbeYPXs2P/jBD+b5mu+++26rIHLFFVckhFAqPY3AIFKSJElSQxgwYAAAr776KmuttVab7VOmTGm1X1f8/+bmZqZOnbpAx3WnABKc4kOSJElSg9h0002BNIVHteeff55JkyaxxhprzK1d7NmzZ6uaxEW1xRZb8Pbbb/Pkk0922ms2IoNISZIkSQ3hsMMOA+Dkk0/mjTfemLt+zpw5fOtb36K5uZnDDz987voVVliBN954g//+97+d8v+PPfZYAI444ggmT57cZvt7773HAw880Cn/q57ZnFWSJElSQ/j4xz/Od77zHX7yk5+w4YYbst9++7HMMstwyy238MQTT7D11lvz7W9/e+7+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\n",
      "text/plain": [
       "<Figure size 1080x720 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "try2=df[['type','fuel','price']][df['price']<=150000].groupby(['type','fuel']).mean()\n",
    "try2.reset_index(level=0,inplace=True)\n",
    "try2.reset_index(level=0,inplace=True)\n",
    "try2=try2.sort_values(['type','fuel'])\n",
    "plt.figure(figsize=(15,10))\n",
    "sns.barplot(x='type', y='price', hue='fuel', data=try2, color='y')\n",
    "plt.xticks(rotation=45,fontsize=20)\n",
    "plt.ylabel('price',fontsize=20)\n",
    "plt.legend(fontsize=20)\n",
    "plt.title('Price of type of cars for each type of fuel');"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b1d17384",
   "metadata": {},
   "source": [
    " Cars with different type of fuel and price for each type."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 57,
   "id": "ee819fe5",
   "metadata": {},
   "outputs": [
    {
     "ename": "SyntaxError",
     "evalue": "invalid syntax (<ipython-input-57-0e276bed6656>, line 1)",
     "output_type": "error",
     "traceback": [
      "\u001b[1;36m  File \u001b[1;32m\"<ipython-input-57-0e276bed6656>\"\u001b[1;36m, line \u001b[1;32m1\u001b[0m\n\u001b[1;33m    Content:\u001b[0m\n\u001b[1;37m            ^\u001b[0m\n\u001b[1;31mSyntaxError\u001b[0m\u001b[1;31m:\u001b[0m invalid syntax\n"
     ]
    }
   ],
   "source": [
    " Content:\n",
    "Missingno - Missing Data\n",
    "Data Cleaning (drop columns , fill numerical with mean and categorical with mode)\n",
    "Detec Outliers (Box plot, Histogram) and perform IQR \n",
    "Seaborn - Bar Plot\n",
    "Matplotlib - Bar Plot\n",
    "Seaborn - Heatmap\n",
    "\n"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.8"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
